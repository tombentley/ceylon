package com.redhat.ceylon.compiler.java.test.annotations;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.ceylon.language.SharedAnnotation$annotation$
@.com.redhat.ceylon.compiler.java.metadata.Interface(useDefaultMethods = true)
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
        value = "T",
        variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
public interface References<T> extends .com.redhat.ceylon.compiler.java.language.ObjectProxy {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$annotations$References$T();
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.FormalAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Interface|T",
            erased = true)
    public abstract .java.lang.Object iface();
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.FormalAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::Klass|T",
            erased = true)
    public abstract .java.lang.Object klass();
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.FormalAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::MemberKlass.Member|T",
            erased = true)
    public abstract .java.lang.Object memberKlass();
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.FormalAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "com.redhat.ceylon.compiler.java.test.annotations::MemberKlass.Member.MemberMember|T",
            erased = true)
    public abstract .java.lang.Object memberMember();
}