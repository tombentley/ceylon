package com.redhat.ceylon.compiler.java.test.issues.bug16xx;

interface Bug1696<Element, Absent> extends .com.redhat.ceylon.compiler.java.language.ObjectProxy {
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug16xx$Bug1696$Element();
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug16xx$Bug1696$Absent();
    
    public default .ceylon.language.Sequence<? extends Element> getPaired() {
        return (.ceylon.language.Sequence<? extends Element>)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    
    public default .ceylon.language.Sequence<? extends Element> getPaired2() {
        return (.ceylon.language.Sequence<? extends Element>)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
}
class Bug1696Extend<Other> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696<.java.lang.Object, .ceylon.language.String>, .java.io.Serializable {
    
    Bug1696Extend(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Other) {
        this.$reified$Other = $reified$Other;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Other;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug16xx$Bug1696$Element() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.union(.ceylon.language.String.$TypeDescriptor$, $reified$Other);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug16xx$Bug1696$Absent() {
        return .ceylon.language.String.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public final .ceylon.language.Sequence getPaired2() {
        final .ceylon.language.Sequence r = .com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696.super.getPaired();
        return r;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696Extend.class, $reified$Other);
    }
}
interface Bug1696MixinA1 extends .ceylon.language.Iterable<.java.lang.Object, .java.lang.Object> {
    
    @.java.lang.Override
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Element() {
        return .ceylon.language.Anything.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Absent() {
        return .ceylon.language.Null.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinA1.class);
}
abstract class Bug1696MixinA2<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinA1, .ceylon.language.Iterable<T, .java.lang.Object>, .java.io.Serializable {
    
    Bug1696MixinA2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Element() {
        return $reified$T;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Absent() {
        return .ceylon.language.Null.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Category$Element() {
        return .ceylon.language.Object.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinA2.class, $reified$T);
    }
}
interface Bug1696MixinB1 extends .ceylon.language.Iterable<.java.lang.Object, .java.lang.Object> {
    
    @.java.lang.Override
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Element() {
        return .ceylon.language.Anything.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Absent() {
        return .ceylon.language.Null.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public default .ceylon.language.Iterable getPaired() {
        return (.ceylon.language.Iterable<? extends .ceylon.language.Sequence<? extends .java.lang.Object>, ? extends .java.lang.Object>)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinB1.class);
}
abstract class Bug1696MixinB2<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinB1, .ceylon.language.Iterable<T, .java.lang.Object>, .java.io.Serializable {
    
    Bug1696MixinB2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Element() {
        return $reified$T;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Absent() {
        return .ceylon.language.Null.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Category$Element() {
        return .ceylon.language.Object.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinB2.class, $reified$T);
    }
}
interface Bug1696MixinC1 extends .ceylon.language.Iterable<.java.lang.Object, .java.lang.Object> {
    
    @.java.lang.Override
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Element() {
        return .ceylon.language.Anything.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Absent() {
        return .ceylon.language.Null.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinC1.class);
}
abstract class Bug1696MixinC2<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinC1, .ceylon.language.Iterable<T, .java.lang.Object>, .java.io.Serializable {
    
    Bug1696MixinC2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Element() {
        return $reified$T;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Absent() {
        return .ceylon.language.Null.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Category$Element() {
        return .ceylon.language.Object.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public .ceylon.language.Iterable getPaired() {
        return (.ceylon.language.Iterable<? extends .ceylon.language.Sequence<? extends T>, ? extends .java.lang.Object>)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinC2.class, $reified$T);
    }
}
interface Bug1696MixinD1 extends .ceylon.language.Iterable<.java.lang.Object, .java.lang.Object> {
    
    @.java.lang.Override
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Element() {
        return .ceylon.language.Anything.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Absent() {
        return .ceylon.language.Null.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public default .ceylon.language.Iterable getPaired() {
        return (.ceylon.language.Iterable<? extends .ceylon.language.Sequence<? extends .java.lang.Object>, ? extends .java.lang.Object>)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinD1.class);
}
abstract class Bug1696MixinD2<T> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinD1, .ceylon.language.Iterable<T, .java.lang.Object>, .java.io.Serializable {
    
    Bug1696MixinD2(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        this.$reified$T = $reified$T;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Element() {
        return $reified$T;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Absent() {
        return .ceylon.language.Null.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Category$Element() {
        return .ceylon.language.Object.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public .ceylon.language.Iterable getPaired() {
        return (.ceylon.language.Iterable<? extends .ceylon.language.Sequence<? extends T>, ? extends .java.lang.Object>)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug16xx.Bug1696MixinD2.class, $reified$T);
    }
}