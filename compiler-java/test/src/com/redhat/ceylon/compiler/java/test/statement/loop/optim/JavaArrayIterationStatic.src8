package com.redhat.ceylon.compiler.java.test.statement.loop.optim;

class JavaArrayIterationStatic implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    JavaArrayIterationStatic() {
    }
    
    private final void arrayOfInts$priv$(final int[] array) {
        final int[] array$1 = array;
        loop_0: for (int i$3 = 0; i$3 < array$1.length; i$3++) {
            final long element = array$1[i$3];
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfIntsBy$priv$(final int[] array) {
        final int[] array$6 = array;
        final int step$5 = .com.redhat.ceylon.compiler.java.Util.toInt(2L);
        if (step$5 <= 0) throw new .ceylon.language.AssertionError("Assertion failed" + ": step size must be greater than zero" + (.java.lang.System.lineSeparator() + "\tviolated " + "step > 0"));
        loop_1: for (int i$8 = 0; i$8 < array$6.length; i$8 += step$5) {
            final long element = array$6[i$8];
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfIntsDisabled$priv$(final int[] array) {
        .java.lang.Object elem$10;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$11 = .com.redhat.ceylon.compiler.java.language.IntArray.getIterable(array).iterator();
        loop_2: while (!((elem$10 = element$iterator$$11.next()) instanceof .ceylon.language.Finished)) {
            final long element = ((.ceylon.language.Integer)elem$10).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
        .java.lang.Object elem$13;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$14 = .com.redhat.ceylon.compiler.java.language.IntArray.getIterable(array).iterator();
        loop_3: while (!((elem$13 = element$iterator$$14.next()) instanceof .ceylon.language.Finished)) {
            final long element = ((.ceylon.language.Integer)elem$13).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfChars$priv$(final char[] array) {
        final char[] array$16 = array;
        loop_4: for (int i$18 = 0; i$18 < array$16.length; i$18++) {
            final int element = array$16[i$18];
            .ceylon.language.print_.print(.ceylon.language.Character.instance(element));
        }
    }
    
    private final void arrayOfCharsBy$priv$(final char[] array) {
        final char[] array$21 = array;
        final int step$20 = .com.redhat.ceylon.compiler.java.Util.toInt(2L);
        if (step$20 <= 0) throw new .ceylon.language.AssertionError("Assertion failed" + ": step size must be greater than zero" + (.java.lang.System.lineSeparator() + "\tviolated " + "step > 0"));
        loop_5: for (int i$23 = 0; i$23 < array$21.length; i$23 += step$20) {
            final int element = array$21[i$23];
            .ceylon.language.print_.print(.ceylon.language.Character.instance(element));
        }
    }
    
    private final void arrayOfBytes$priv$(final byte[] array) {
        final byte[] array$25 = array;
        loop_6: for (int i$27 = 0; i$27 < array$25.length; i$27++) {
            final byte element = array$25[i$27];
            .ceylon.language.print_.print(.ceylon.language.Byte.instance(element));
        }
    }
    
    private final void arrayOfBytesBy$priv$(final byte[] array) {
        final byte[] array$30 = array;
        final int step$29 = .com.redhat.ceylon.compiler.java.Util.toInt(2L);
        if (step$29 <= 0) throw new .ceylon.language.AssertionError("Assertion failed" + ": step size must be greater than zero" + (.java.lang.System.lineSeparator() + "\tviolated " + "step > 0"));
        loop_7: for (int i$32 = 0; i$32 < array$30.length; i$32 += step$29) {
            final byte element = array$30[i$32];
            .ceylon.language.print_.print(.ceylon.language.Byte.instance(element));
        }
    }
    
    private final void arrayOfShorts$priv$(final short[] array) {
        final short[] array$34 = array;
        loop_8: for (int i$36 = 0; i$36 < array$34.length; i$36++) {
            final long element = array$34[i$36];
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element));
        }
    }
    
    private final void arrayOfShortsBy$priv$(final short[] array) {
        final short[] array$39 = array;
        final int step$38 = .com.redhat.ceylon.compiler.java.Util.toInt(2L);
        if (step$38 <= 0) throw new .ceylon.language.AssertionError("Assertion failed" + ": step size must be greater than zero" + (.java.lang.System.lineSeparator() + "\tviolated " + "step > 0"));
        loop_9: for (int i$41 = 0; i$41 < array$39.length; i$41 += step$38) {
            final long element = array$39[i$41];
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element));
        }
    }
    
    private final void arrayOfLongs$priv$(final long[] array) {
        final long[] array$43 = array;
        loop_10: for (int i$45 = 0; i$45 < array$43.length; i$45++) {
            final long element = array$43[i$45];
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element));
        }
    }
    
    private final void arrayOfLongsBy$priv$(final long[] array) {
        final long[] array$48 = array;
        final int step$47 = .com.redhat.ceylon.compiler.java.Util.toInt(2L);
        if (step$47 <= 0) throw new .ceylon.language.AssertionError("Assertion failed" + ": step size must be greater than zero" + (.java.lang.System.lineSeparator() + "\tviolated " + "step > 0"));
        loop_11: for (int i$50 = 0; i$50 < array$48.length; i$50 += step$47) {
            final long element = array$48[i$50];
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element));
        }
    }
    
    private final void arrayOfBooleans$priv$(final boolean[] array) {
        final boolean[] array$52 = array;
        loop_12: for (int i$54 = 0; i$54 < array$52.length; i$54++) {
            final boolean element = array$52[i$54];
            .ceylon.language.print_.print(.ceylon.language.Boolean.instance(element));
        }
    }
    
    private final void arrayOfBooleansBy$priv$(final boolean[] array) {
        final boolean[] array$57 = array;
        final int step$56 = .com.redhat.ceylon.compiler.java.Util.toInt(2L);
        if (step$56 <= 0) throw new .ceylon.language.AssertionError("Assertion failed" + ": step size must be greater than zero" + (.java.lang.System.lineSeparator() + "\tviolated " + "step > 0"));
        loop_13: for (int i$59 = 0; i$59 < array$57.length; i$59 += step$56) {
            final boolean element = array$57[i$59];
            .ceylon.language.print_.print(.ceylon.language.Boolean.instance(element));
        }
    }
    
    private final void arrayOfFloats$priv$(final float[] array) {
        final float[] array$61 = array;
        loop_14: for (int i$63 = 0; i$63 < array$61.length; i$63++) {
            final double element = array$61[i$63];
            .ceylon.language.print_.print(.ceylon.language.Float.instance(element));
        }
    }
    
    private final void arrayOfFloatsBy$priv$(final float[] array) {
        final float[] array$66 = array;
        final int step$65 = .com.redhat.ceylon.compiler.java.Util.toInt(2L);
        if (step$65 <= 0) throw new .ceylon.language.AssertionError("Assertion failed" + ": step size must be greater than zero" + (.java.lang.System.lineSeparator() + "\tviolated " + "step > 0"));
        loop_15: for (int i$68 = 0; i$68 < array$66.length; i$68 += step$65) {
            final double element = array$66[i$68];
            .ceylon.language.print_.print(.ceylon.language.Float.instance(element));
        }
    }
    
    private final void arrayOfDoubles$priv$(final double[] array) {
        final double[] array$70 = array;
        loop_16: for (int i$72 = 0; i$72 < array$70.length; i$72++) {
            final double element = array$70[i$72];
            .ceylon.language.print_.print(.ceylon.language.Float.instance(element));
        }
    }
    
    private final void arrayOfDoublesBy$priv$(final double[] array) {
        final double[] array$75 = array;
        final int step$74 = .com.redhat.ceylon.compiler.java.Util.toInt(2L);
        if (step$74 <= 0) throw new .ceylon.language.AssertionError("Assertion failed" + ": step size must be greater than zero" + (.java.lang.System.lineSeparator() + "\tviolated " + "step > 0"));
        loop_17: for (int i$77 = 0; i$77 < array$75.length; i$77 += step$74) {
            final double element = array$75[i$77];
            .ceylon.language.print_.print(.ceylon.language.Float.instance(element));
        }
    }
    
    private final void nativeArrayOfObjects$priv$(final .java.lang.Object[] array) {
        final .ceylon.language.Array<.java.lang.Object> array$79 = .com.redhat.ceylon.compiler.java.language.ObjectArray<? extends .java.lang.Object>.getArray(array);
        final int length$80 = (int)array$79.getSize();
        loop_18: for (int i$81 = 0; i$81 < length$80; i$81++) {
            final .java.lang.Object element = array$79.unsafeItem(i$81);
            .ceylon.language.print_.print(element);
        }
    }
    
    private final void nativeArrayOfObjectsIterable$priv$(final .java.lang.Object[] array) {
        final .java.lang.Object[] array$83 = array;
        loop_19: for (int i$85 = 0; i$85 < array$83.length; i$85++) {
            final .java.lang.Object element = array$83[i$85];
            .ceylon.language.print_.print(element);
        }
    }
    
    private final <T>void nativeArrayOfObjectsTp$priv$(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final T[] array) {
        final .ceylon.language.Array<T> array$87 = .com.redhat.ceylon.compiler.java.language.ObjectArray<? extends T>.getArray(array);
        final int length$88 = (int)array$87.getSize();
        loop_20: for (int i$89 = 0; i$89 < length$88; i$89++) {
            final T element = (T)array$87.unsafeItem(i$89);
            .ceylon.language.print_.print(element);
        }
    }
    
    private final <T>void nativeArrayOfObjectsTpIterable$priv$(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, final T[] array) {
        final T[] array$91 = array;
        loop_21: for (int i$93 = 0; i$93 < array$91.length; i$93++) {
            final T element = array$91[i$93];
            .ceylon.language.print_.print(element);
        }
    }
    
    private final void nativeArrayOfIntegers$priv$(final .ceylon.language.Integer[] array) {
        final .ceylon.language.Array<.ceylon.language.Integer> array$95 = .com.redhat.ceylon.compiler.java.language.ObjectArray<? extends .ceylon.language.Integer>.getArray(array);
        final int length$96 = (int)array$95.getSize();
        loop_22: for (int i$97 = 0; i$97 < length$96; i$97++) {
            final .ceylon.language.Integer element = (.ceylon.language.Integer)array$95.unsafeItem(i$97);
            .ceylon.language.print_.print(element);
        }
    }
    
    private final void nativeArrayOfIntegersIterable$priv$(final .ceylon.language.Integer[] array) {
        final .ceylon.language.Integer[] array$99 = array;
        loop_23: for (int i$101 = 0; i$101 < array$99.length; i$101++) {
            final .ceylon.language.Integer element = array$99[i$101];
            .ceylon.language.print_.print(element);
        }
    }
    
    private final void nativeArrayOfIntegersOpt$priv$(final .ceylon.language.Integer[] array) {
        final .ceylon.language.Array<.ceylon.language.Integer> array$103 = .com.redhat.ceylon.compiler.java.language.ObjectArray<? extends .ceylon.language.Integer>.getArray(array);
        final int length$104 = (int)array$103.getSize();
        loop_24: for (int i$105 = 0; i$105 < length$104; i$105++) {
            final .ceylon.language.Integer element = (.ceylon.language.Integer)array$103.unsafeItem(i$105);
            .ceylon.language.print_.print((
                let
                {
                    .ceylon.language.Integer $ceylontmp$106 = element;
                }
                returning $ceylontmp$106 != null ? $ceylontmp$106 : .ceylon.language.Integer.instance(0L);
            ));
        }
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.loop.optim.JavaArrayIterationStatic.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.loop.optim.JavaArrayIterationStatic.class);
}