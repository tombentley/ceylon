package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class mplFatArrow_ {
    
    private mplFatArrow_() {
    }
    
    static .ceylon.language.Callable<? extends .java.lang.Object> mplFatArrow() {
        return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
            
            @.java.lang.Override
            public .java.lang.Object $call$() {
                new .ceylon.language.String(new .com.redhat.ceylon.compiler.java.language.LazyIterable<.ceylon.language.Character, .java.lang.Object>(.ceylon.language.Character.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 1, false){
                    
                    @.java.lang.Override
                    protected final .java.lang.Object $evaluate$(int $index$) {
                        switch ($index$) {
                        case 0: 
                            return .ceylon.language.Character.instance(32);
                        
                        default: 
                            return null;
                        
                        }
                    }
                });
                return null;
            }
        };
    }
}