package com.redhat.ceylon.compiler.java.test.interop;

final class variadicArraysMethods_ {
    
    private variadicArraysMethods_() {
    }
    
    static void variadicArraysMethods() {
        final .com.redhat.ceylon.compiler.java.test.interop.TypesJava java = new .com.redhat.ceylon.compiler.java.test.interop.TypesJava();
        final .java.lang.Object[] arr1 = new .java.lang.Object[1];
        arr1[0] = .ceylon.language.String.instance("a");
        final .java.lang.Object[] arr2 = new .java.lang.Object[1];
        arr2[0] = .ceylon.language.String.instance("b");
        final .ceylon.language.Iterable<? extends .java.lang.Object[], ? extends .java.lang.Object> objectArray = new .com.redhat.ceylon.compiler.java.language.LazyIterable<.java.lang.Object[], .java.lang.Object>(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.language.ObjectArray.class, .ceylon.language.Object.$TypeDescriptor$), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, 2, false){
            
            @.java.lang.Override
            protected final .java.lang.Object $evaluate$(int $index$) {
                switch ($index$) {
                case 0: 
                    return arr1;
                
                case 1: 
                    return arr2;
                
                default: 
                    return null;
                
                }
            }
        };
        java.variadicObjectArray((
            let
            {
                .ceylon.language.Sequential<? extends .java.lang.Object[]> $ceylontmp$0$0 = objectArray.sequence();
            }
            returning .com.redhat.ceylon.compiler.java.Util.<.java.lang.Object[]>toArray($ceylontmp$0$0, new .java.lang.Object[.com.redhat.ceylon.compiler.java.Util.toInt($ceylontmp$0$0.getSize())][]);
        ));
        final .ceylon.language.Callable<? extends .java.lang.Object> f = (.ceylon.language.Callable<? extends .java.lang.Object>)(.java.lang.Object).ceylon.language.nothing_.get_();
        final .java.lang.Object[] objectArray1 = new .java.lang.Object[0];
        f.$call$((.java.lang.Object)(.java.lang.Object)objectArray1);
        final int[] intArray = new int[0];
        f.$call$((.java.lang.Object)intArray);
        final .ceylon.language.Callable<? extends .java.lang.Object> f2 = (.ceylon.language.Callable<? extends .java.lang.Object>)(.java.lang.Object).ceylon.language.nothing_.get_();
        f2.$call$((.java.lang.Object)(.java.lang.Object)null);
        java.variadicObject((.java.lang.Object)null);
        java.variadicObject((.java.lang.Object)arr1);
        java.variadicObject((.java.lang.Object[])arr1);
        java.variadicInt(intArray);
    }
}