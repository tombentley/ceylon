package com.redhat.ceylon.compiler.java.test.issues.bug14xx;

interface Bug1419Val<Get, Set> extends .com.redhat.ceylon.compiler.java.language.ObjectProxy {
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Val$Get();
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Val$Set();
    
    public abstract Get get();
}
interface Bug1419Mem<Container, Member> extends .com.redhat.ceylon.compiler.java.language.ObjectProxy {
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Mem$Container();
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Mem$Member();
    
    public abstract Member bind(final Container instance);
}
interface Bug1419Attr<Container, Get, Set> extends .com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419Mem<Container, .com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419Val<? extends Get, ? super Set>> {
    
    @.java.lang.Override
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Mem$Container() {
        return this.$reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Attr$Container();
    }
    
    @.java.lang.Override
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Mem$Member() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419Val.class, this.$reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Attr$Get(), this.$reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Attr$Set());
    }
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Attr$Container();
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Attr$Get();
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419Attr$Set();
}
interface Bug1419COI<T> extends .com.redhat.ceylon.compiler.java.language.ObjectProxy {
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug14xx$Bug1419COI$T();
    
    public abstract <Container, Get, Set>.com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419Attr<? super Container, ? extends Get, ? super Set> getAttribute(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Container, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Get, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Set, final .java.lang.String name);
}
final class bug1419_ {
    
    private bug1419_() {
    }
    
    static void bug1419(final .ceylon.language.meta.model.ClassOrInterface<? extends .java.lang.Object> t, final .com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419COI<.java.lang.Object> t2) {
        final .ceylon.language.meta.model.Attribute string1 = t.<.java.lang.Object, .ceylon.language.String, .java.lang.Object>getAttribute(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, "str");
        final .ceylon.language.meta.model.Attribute string2 = t.<.java.lang.Object, .ceylon.language.String, .java.lang.Object>getAttribute(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, "str");
        final .ceylon.language.meta.model.Attribute<? super .java.lang.Object, ? extends .ceylon.language.String, ? super .ceylon.language.String> string3 = t.<.java.lang.Object, .ceylon.language.String, .ceylon.language.String>getAttribute(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, "str");
        .java.lang.String $ceylontmp$assert$0 = null;
        final .ceylon.language.meta.model.Attribute<? super .java.lang.Object, ? extends .ceylon.language.String, ? super .ceylon.language.String> string3$6;
        final .ceylon.language.meta.model.Attribute string2$4;
        final .ceylon.language.meta.model.Attribute string1$2;
        .ceylon.language.meta.model.Attribute string1$1 = null;
        if ((string1$1 = string1) != null) {
            string1$2 = string1$1;
            .ceylon.language.meta.model.Attribute string2$3 = null;
            if ((string2$3 = string2) != null) {
                string2$4 = string2$3;
                .ceylon.language.meta.model.Attribute<? super .java.lang.Object, ? extends .ceylon.language.String, ? super .ceylon.language.String> string3$5 = null;
                if ((string3$5 = string3) != null) {
                    string3$6 = string3$5;
                } else {
                    string3$6 = null;
                    $ceylontmp$assert$0 = .java.lang.System.lineSeparator() + "\tunviolated " + "exists string1" + (.java.lang.System.lineSeparator() + "\tunviolated ") + "exists string2" + (.java.lang.System.lineSeparator() + "\tviolated ") + "exists string3";
                }
            } else {
                string2$4 = null;
                string3$6 = null;
                $ceylontmp$assert$0 = .java.lang.System.lineSeparator() + "\tunviolated " + "exists string1" + (.java.lang.System.lineSeparator() + "\tviolated ") + "exists string2" + (.java.lang.System.lineSeparator() + "\tuntested ") + "exists string3";
            }
        } else {
            string1$2 = null;
            string2$4 = null;
            string3$6 = null;
            $ceylontmp$assert$0 = .java.lang.System.lineSeparator() + "\tviolated " + "exists string1" + (.java.lang.System.lineSeparator() + "\tuntested ") + "exists string2" + (.java.lang.System.lineSeparator() + "\tuntested ") + "exists string3";
        }
        if ($ceylontmp$assert$0 != null) throw new .ceylon.language.AssertionError("Assertion failed" + $ceylontmp$assert$0);
        final .ceylon.language.meta.model.Value a1 = (.ceylon.language.meta.model.Value)string1$2.$call$((.java.lang.Object)t);
        final .ceylon.language.meta.model.Value a2 = (.ceylon.language.meta.model.Value)string2$4.$call$((.java.lang.Object)t);
        final .ceylon.language.meta.model.Value<? extends .ceylon.language.String, ? super .ceylon.language.String> a3 = string3$6.$call$((.java.lang.Object)t);
        final .com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419Attr string4 = t2.<.java.lang.Object, .ceylon.language.String, .java.lang.Object>getAttribute(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.String.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType, "str");
        final .com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419Attr string4$9;
        .com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419Attr string4$8 = null;
        if ((string4$8 = string4) != null) {
            string4$9 = string4$8;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "exists string4"));
        }
        final .com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419Val a4 = ((.com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419Mem<? super .java.lang.Object, ? extends .com.redhat.ceylon.compiler.java.test.issues.bug14xx.Bug1419Val>)string4$9).bind(t);
    }
}