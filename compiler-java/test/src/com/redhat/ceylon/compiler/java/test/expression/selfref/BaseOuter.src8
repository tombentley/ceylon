package com.redhat.ceylon.compiler.java.test.expression.selfref;

public interface BaseOuter extends .com.redhat.ceylon.compiler.java.language.ObjectProxy {
    
    public default .java.lang.Object getInverse() {
        
        final class inverse_ implements .java.io.Serializable, .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private inverse_() {
            }
            
            public final .com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuter item() {
                return .com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuter.this;
            }
            
            public final .com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuter item2() {
                return .com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuter.this;
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuter.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("inverse")), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(inverse_.class));
            }
        }
        final inverse_ inverse = new inverse_();
        return inverse;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuter.class);
}
public abstract class BaseOuterClass implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public BaseOuterClass() {
    }
    
    public .java.lang.Object getInverse() {
        
        final class inverse_ implements .java.io.Serializable, .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType {
            
            private inverse_() {
            }
            
            public final .com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuterClass item() {
                return .com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuterClass.this;
            }
            
            public final .com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuterClass item2() {
                return .com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuterClass.this;
            }
            
            @.java.lang.Override
            public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuterClass.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue("inverse")), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(inverse_.class));
            }
        }
        final inverse_ inverse = new inverse_();
        return inverse;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuterClass.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.expression.selfref.BaseOuterClass.class);
}