package com.redhat.ceylon.compiler.java.test.statement.loop;

public final class bug6070_ {
    
    private bug6070_() {
    }
    
    public static void bug6070() {
        final long x;
        long x$0 = 0L;
        boolean doforelse$1 = true;
        final long start$3 = 0L;
        final long length$4 = 3L;
        loop_0: for (long i$5 = 0; i$5 < length$4; i$5++) {
            final long i = i$5 + start$3;
            boolean doforelse$6 = true;
            final long start$8 = 0L;
            final long length$9 = 3L;
            loop_1: for (long i$10 = 0; i$10 < length$9; i$10++) {
                final long j = i$10 + start$8;
                if (true || false) {
                    x$0 = i * 10L + j;
                    final long x$12 = x$0;
                    doforelse$6 = false;
                    break loop_1;
                }
            }
            if (doforelse$6) {
                continue loop_0;
            }
            doforelse$1 = false;
            break loop_0;
        }
        if (doforelse$1) {
            x$0 = -1L;
            final long x$13 = x$0;
        }
        x = x$0;
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(x));
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        .com.redhat.ceylon.compiler.java.test.statement.loop.bug6070_.bug6070();
    }
}
final class bug1227_again_ {
    
    private bug1227_again_() {
    }
    
    static long bug1227_again(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$14 = 0L;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$28 = l;
        final boolean isArray$29 = iterable$28 instanceof .ceylon.language.Array;
        final boolean isTuple$30 = iterable$28 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$28).$getArray$() != null;
        .java.lang.Object elem$16 = null;
        int i$31 = 0;
        final int length$32;
        if (isArray$29 || isTuple$30) {
            length$32 = (int)iterable$28.getSize();
        } else {
            length$32 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$17 = isTuple$30 || isArray$29 ? null : iterable$28.iterator();
        loop_2: while (isTuple$30 || isArray$29 ? i$31 < length$32 : !((elem$16 = index$iterator$$17.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$29 || isTuple$30) elem$16 = iterable$28.getFromFirst(i$31++);
            final long index = ((.ceylon.language.Integer)elem$16).longValue();
            final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$23 = l;
            final boolean isArray$24 = iterable$23 instanceof .ceylon.language.Array;
            final boolean isTuple$25 = iterable$23 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$23).$getArray$() != null;
            .java.lang.Object elem$19 = null;
            int i$26 = 0;
            final int length$27;
            if (isArray$24 || isTuple$25) {
                length$27 = (int)iterable$23.getSize();
            } else {
                length$27 = 0;
            }
            .ceylon.language.Iterator<? extends .ceylon.language.Integer> index2$iterator$$20 = isTuple$25 || isArray$24 ? null : iterable$23.iterator();
            loop_3: while (isTuple$25 || isArray$24 ? i$26 < length$27 : !((elem$19 = index2$iterator$$20.next()) instanceof .ceylon.language.Finished)) {
                if (isArray$24 || isTuple$25) elem$19 = iterable$23.getFromFirst(i$26++);
                final long index2 = ((.ceylon.language.Integer)elem$19).longValue();
                if (someBoolean) {
                    from$14 = index + index2;
                    final long from$22 = from$14;
                    return from$22;
                }
            }
        }
        from$14 = 1L;
        final long from$33 = from$14;
        from = from$14;
        return from;
    }
}