package com.redhat.ceylon.compiler.java.test.expression.operator;

final class floatPowerWithIntLiteralOptim_ {
    
    private floatPowerWithIntLiteralOptim_() {
    }
    
    static void floatPowerWithIntLiteralOptim() {
        final double x = 20.0;
        final double x1 = x;
        final double xSquared = (
            let
            {
                double base$0 = x;
            }
            returning base$0 * base$0;
        );
        final double xCubed = (
            let
            {
                double base$1 = x;
            }
            returning base$1 * base$1 * base$1;
        );
        final double x0 = .ceylon.language.Float.$power$(x, 0L);
        final double xm1 = .ceylon.language.Float.$power$(x, -1L);
        final double x1_ = .ceylon.language.Float.$power$(x, 1.0);
        final double xSquared_ = .ceylon.language.Float.$power$(x, 2.0);
        final double xCubed_ = .ceylon.language.Float.$power$(x, 3.0);
        final double x0_ = .ceylon.language.Float.$power$(x, 0.0);
        final double xm1_ = .ceylon.language.Float.$power$(x, -1.0);
    }
}