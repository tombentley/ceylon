package com.redhat.ceylon.compiler.java.test.statement.conditional;

final class assertionSpecial_ {
    
    private assertionSpecial_() {
    }
    
    static void assertionSpecial() {
        final .java.lang.Object v1 = .ceylon.language.Integer.instance(5L);
        final long a1$2;
        .java.lang.Object a1$1 = null;
        if ((a1$1 = v1) instanceof .ceylon.language.Integer) {
            a1$2 = ((.ceylon.language.Integer)a1$1).longValue();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Integer a1 = v1"));
        }
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(-a1$2));
        final .ceylon.language.String v2 = .ceylon.language.String.instance("X");
        final .java.lang.String a2$5;
        .ceylon.language.String a2$4 = null;
        if ((a2$4 = v2) != null) {
            a2$5 = a2$4.toString();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "exists a2 = v2"));
        }
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(.ceylon.language.String.getSize(a2$5)));
        final .ceylon.language.Sequential<? extends .ceylon.language.Integer> v3 = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>).ceylon.language.Tuple.instance(.ceylon.language.Integer.$TypeDescriptor$, new .java.lang.Object[]{
                .ceylon.language.Integer.instance(1L),
                .ceylon.language.Integer.instance(2L),
                .ceylon.language.Integer.instance(3L)});
        final .ceylon.language.Sequence<? extends .ceylon.language.Integer> a3$8;
        .ceylon.language.Sequential<? extends .ceylon.language.Integer> a3$7 = null;
        if ((a3$7 = v3) instanceof .ceylon.language.Sequence) {
            a3$8 = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>)(.ceylon.language.Sequence)a3$7;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "nonempty a3 = v3"));
        }
        .ceylon.language.print_.print(.ceylon.language.Integer.instance(a3$8.getSize()));
        final .ceylon.language.Sequence<? extends .ceylon.language.Integer> v3$11;
        .ceylon.language.Sequential<? extends .ceylon.language.Integer> v3$10 = null;
        if ((v3$10 = v3) instanceof .ceylon.language.Sequence) {
            v3$11 = (.ceylon.language.Sequence<? extends .ceylon.language.Integer>)(.ceylon.language.Sequence)v3$10;
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "nonempty v3"));
        }
        final .java.lang.String v2$14;
        .ceylon.language.String v2$13 = null;
        if ((v2$13 = v2) != null) {
            v2$14 = v2$13.toString();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "exists v2"));
        }
        final long v1$17;
        .java.lang.Object v1$16 = null;
        if ((v1$16 = v1) instanceof .ceylon.language.Integer) {
            v1$17 = ((.ceylon.language.Integer)v1$16).longValue();
        } else {
            throw new .ceylon.language.AssertionError("Assertion failed" + (.java.lang.System.lineSeparator() + "\tviolated " + "is Integer v1"));
        }
    }
}