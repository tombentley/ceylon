package com.redhat.ceylon.compiler.java.test.structure.iface;

interface InterfaceWithMpl extends .com.redhat.ceylon.compiler.java.language.ObjectProxy {
    
    public default .ceylon.language.Callable<? extends .ceylon.language.Integer> mpl(final long i) {
        return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.tuple(false, false, -1, .ceylon.language.Integer.$TypeDescriptor$), "Integer(Integer)", (short)-1){
            
            @.java.lang.Override
            public .ceylon.language.Integer $call$(final .java.lang.Object $param$0) {
                final long j = ((.ceylon.language.Integer)$param$0).longValue();
                return .ceylon.language.Integer.instance(i + j);
            }
        };
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.iface.InterfaceWithMpl.class);
}