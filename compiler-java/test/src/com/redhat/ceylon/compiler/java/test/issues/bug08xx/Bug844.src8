package com.redhat.ceylon.compiler.java.test.issues.bug08xx;

public class Bug844_Top<Element> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    public Bug844_Top(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element) {
        this.$reified$Element = $reified$Element;
        this.firstAttribute = (Element)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element;
    
    public Element first() {
        return (Element)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    private final Element firstAttribute;
    
    public Element getFirstAttribute() {
        return firstAttribute;
    }
    
    public static void main(.java.lang.String[] args) {
        .ceylon.language.process_.get_().setupArguments(args);
        new .com.redhat.ceylon.compiler.java.test.issues.bug08xx.Bug844_Top(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug08xx.Bug844_Top.class, $reified$Element);
    }
}
public class Bug844_Bottom<Element, First extends Element> extends .com.redhat.ceylon.compiler.java.test.issues.bug08xx.Bug844_Top<Element> {
    
    protected Bug844_Bottom(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$First) {
        super($reified$Element);
        this.$reified$Element = $reified$Element;
        this.$reified$First = $reified$First;
        this.firstAttribute = null;
    }
    
    public Bug844_Bottom(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$First, final First firstAttribute) {
        super($reified$Element);
        this.$reified$Element = $reified$Element;
        this.$reified$First = $reified$First;
        this.firstAttribute = firstAttribute;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element;
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$First;
    
    @.java.lang.Override
    public final First first() {
        return (First)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    private final First firstAttribute;
    
    @.java.lang.Override
    public final First getFirstAttribute() {
        return firstAttribute;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug08xx.Bug844_Bottom.class, $reified$Element, $reified$First);
    }
}
public abstract class Bug844_Tuple<Element, First extends Element, Rest> extends .java.lang.Object implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .ceylon.language.Sequence<Element>, .java.io.Serializable {
    
    protected Bug844_Tuple(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$First, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Rest) {
        super();
        this.$reified$Element = $reified$Element;
        this.$reified$First = $reified$First;
        this.$reified$Rest = $reified$Rest;
        this.first = null;
        this.rest = null;
    }
    
    public Bug844_Tuple(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$First, final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Rest, final First first, final .java.lang.Object rest) {
        super();
        this.$reified$Element = $reified$Element;
        this.$reified$First = $reified$First;
        this.$reified$Rest = $reified$Rest;
        this.first = first;
        this.rest = (.ceylon.language.Sequential<? extends Element>)rest;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element;
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$First;
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Rest;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Ranged$Subrange() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.ceylon.language.Sequential.class, $reified$Element);
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Ranged$Index() {
        return .ceylon.language.Integer.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Ranged$Element() {
        return $reified$Element;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Element() {
        return $reified$Element;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Iterable$Absent() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.NothingType;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Category$Element() {
        return .ceylon.language.Object.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$ceylon$language$Sequence$Element() {
        return $reified$Element;
    }
    
    @.java.lang.Override
    public int hashCode() {
        return .ceylon.language.List.hashCode(.com.redhat.ceylon.compiler.java.test.issues.bug08xx.Bug844_Tuple.this);
    }
    
    @.java.lang.Override
    public boolean equals(.java.lang.Object that) {
        return .ceylon.language.List.equals(.com.redhat.ceylon.compiler.java.test.issues.bug08xx.Bug844_Tuple.this, that);
    }
    private final First first;
    
    @.java.lang.Override
    public final First getFirst() {
        return first;
    }
    private final .ceylon.language.Sequential<? extends Element> rest;
    
    @.java.lang.Override
    public final .ceylon.language.Sequential getRest() {
        return rest;
    }
    
    @.java.lang.Override
    public final .java.lang.String toString() {
        return new .java.lang.StringBuilder().append("(").append((
            let
            {
                .ceylon.language.String $ceylontmp$1 = (
                    let
                    {
                        .java.lang.Object safe$0 = getFirst();
                    }
                    returning safe$0 != null ? .ceylon.language.String.instance(safe$0.toString()) : null;
                );
            }
            returning $ceylontmp$1 != null ? $ceylontmp$1 : .ceylon.language.String.instance("null");
        ).toString()).append(", ").append(((.ceylon.language.Ranged<? super .ceylon.language.Integer, .ceylon.language.Character, ? extends .ceylon.language.String>)(.ceylon.language.Ranged).ceylon.language.String.instance(((.ceylon.language.Sequential<? extends Element>)(.ceylon.language.Sequential)getRest()).toString())).spanFrom(.ceylon.language.Integer.instance(1L)).toString()).toString();
    }
    
    @.java.lang.Override
    public final .ceylon.language.Integer getLastIndex() {
        .ceylon.language.Integer restLastIndex$3;
        if ((restLastIndex$3 = ((.ceylon.language.List<? extends Element>)(.ceylon.language.List)getRest()).getLastIndex()) != null) {
            final long restLastIndex$4 = restLastIndex$3.longValue();
            return .ceylon.language.Integer.instance(restLastIndex$4 + 1L);
        } else {
            return .ceylon.language.Integer.instance(0L);
        }
    }
    
    @.java.lang.Override
    public final .ceylon.language.Sequence<? extends Element> getReversed() {
        return (.ceylon.language.Sequence<? extends Element>)((.ceylon.language.Sequential<? extends Element>)(.ceylon.language.Sequential)getRest()).getReversed().<First>withTrailing($reified$First, (First)(.java.lang.Object)getFirst());
    }
    
    @.java.lang.Override
    public final .ceylon.language.Sequential<? extends Element> measure(final .ceylon.language.Integer from, final long length) {
        return from.longValue() <= 0L ? (.ceylon.language.Sequential<? extends Element>)((.ceylon.language.Sequential<? extends Element>)(.ceylon.language.Sequential)(.ceylon.language.Sequential<? extends Element>)(.ceylon.language.Sequential)((.ceylon.language.Ranged<? super .ceylon.language.Integer, Element, ? extends .ceylon.language.Sequential<? extends Element>>)(.ceylon.language.Ranged)getRest()).measure(.ceylon.language.Integer.instance(0L), length + from.longValue() - 1L)).<First>withLeading($reified$First, (First)(.java.lang.Object)getFirst()) : (.ceylon.language.Sequential<? extends Element>)(.ceylon.language.Sequential)(.ceylon.language.Sequential<? extends Element>)(.ceylon.language.Sequential)((.ceylon.language.Ranged<? super .ceylon.language.Integer, Element, ? extends .ceylon.language.Sequential<? extends Element>>)(.ceylon.language.Ranged)getRest()).measure(.ceylon.language.Integer.instance(from.longValue() - 1L), length);
    }
    
    @.java.lang.Override
    public final .ceylon.language.Sequential<? extends Element> span(final .ceylon.language.Integer from, final .ceylon.language.Integer end) {
        return .ceylon.language.Integer.notLargerThan(from.longValue(), end.longValue()) ? ((.ceylon.language.Ranged<? super .ceylon.language.Integer, Element, ? extends .ceylon.language.Sequential<? extends Element>>)(.ceylon.language.Ranged).com.redhat.ceylon.compiler.java.test.issues.bug08xx.Bug844_Tuple.this).measure(from, .ceylon.language.Integer.minus(end.longValue(), from.longValue()) + 1L) : ((.ceylon.language.Ranged<? super .ceylon.language.Integer, Element, ? extends .ceylon.language.Sequential<? extends Element>>)(.ceylon.language.Ranged).com.redhat.ceylon.compiler.java.test.issues.bug08xx.Bug844_Tuple.this).measure(end, .ceylon.language.Integer.minus(from.longValue(), end.longValue()) + 1L).getReversed().sequence();
    }
    
    @.java.lang.Override
    public final .ceylon.language.Sequential<? extends Element> spanFrom(final .ceylon.language.Integer from) {
        return (.ceylon.language.Sequential<? extends Element>)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    
    @.java.lang.Override
    public final .ceylon.language.Sequential<? extends Element> spanTo(final .ceylon.language.Integer to) {
        return (.ceylon.language.Sequential<? extends Element>)(.java.lang.Object).ceylon.language.nothing_.get_();
    }
    
    @.java.lang.Override
    public final .ceylon.language.Sequence<? extends Element> $clone() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug08xx.Bug844_Tuple.this;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug08xx.Bug844_Tuple.class, $reified$Element, $reified$First, $reified$Rest);
    }
}