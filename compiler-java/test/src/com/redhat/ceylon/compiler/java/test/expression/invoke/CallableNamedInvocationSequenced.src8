package com.redhat.ceylon.compiler.java.test.expression.invoke;

final class callableNamedInvocationSequenced_f_ {
    
    private callableNamedInvocationSequenced_f_() {
    }
    
    static void callableNamedInvocationSequenced_f(final .ceylon.language.Callable<? extends .java.lang.Object> foo) {
        (
            let
            {
                .ceylon.language.Integer arg$0$0 = .ceylon.language.Integer.instance(1L);
                .ceylon.language.Sequential arg$0$1 = (.ceylon.language.Sequential).ceylon.language.empty_.get_();
                foo.$callvariadic$(arg$0$0, arg$0$1);
            }
            returning null;
        );
        (
            let
            {
                .ceylon.language.Integer arg$1$0 = .ceylon.language.Integer.instance(1L);
                .ceylon.language.Sequential<? extends .ceylon.language.String> arg$1$1 = (.ceylon.language.Sequence<? extends .ceylon.language.String>).ceylon.language.Tuple.instance(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.String.instance("")});
                foo.$callvariadic$(arg$1$0, arg$1$1);
            }
            returning null;
        );
        (
            let
            {
                .ceylon.language.Integer arg$2$0 = .ceylon.language.Integer.instance(1L);
                .ceylon.language.Sequential<? extends .ceylon.language.String> arg$2$1 = (.ceylon.language.Sequence<? extends .ceylon.language.String>).ceylon.language.Tuple.instance(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{
                        .ceylon.language.String.instance(""),
                        .ceylon.language.String.instance("")});
                foo.$callvariadic$(arg$2$0, arg$2$1);
            }
            returning null;
        );
    }
}