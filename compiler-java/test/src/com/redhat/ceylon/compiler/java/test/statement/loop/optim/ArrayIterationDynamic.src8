package com.redhat.ceylon.compiler.java.test.statement.loop.optim;

class ArrayIterationDynamic implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
    
    ArrayIterationDynamic() {
    }
    
    private final void arrayOfIntegers$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$3 = array;
        final boolean isArray$4 = iterable$3 instanceof .ceylon.language.Array;
        final boolean isTuple$5 = iterable$3 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$3).$getArray$() != null;
        .java.lang.Object elem$1 = null;
        int i$6 = 0;
        final int length$7;
        if (isArray$4 || isTuple$5) {
            length$7 = (int)iterable$3.getSize();
        } else {
            length$7 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$2 = isTuple$5 || isArray$4 ? null : iterable$3.iterator();
        loop_0: while (isTuple$5 || isArray$4 ? i$6 < length$7 : !((elem$1 = element$iterator$$2.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$4 || isTuple$5) elem$1 = iterable$3.getFromFirst(i$6++);
            final long element = ((.ceylon.language.Integer)elem$1).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfCharacters$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Character, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Character, ? extends .java.lang.Object> iterable$11 = array;
        final boolean isArray$12 = iterable$11 instanceof .ceylon.language.Array;
        final boolean isTuple$13 = iterable$11 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$11).$getArray$() != null;
        .java.lang.Object elem$9 = null;
        int i$14 = 0;
        final int length$15;
        if (isArray$12 || isTuple$13) {
            length$15 = (int)iterable$11.getSize();
        } else {
            length$15 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Character> element$iterator$$10 = isTuple$13 || isArray$12 ? null : iterable$11.iterator();
        loop_1: while (isTuple$13 || isArray$12 ? i$14 < length$15 : !((elem$9 = element$iterator$$10.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$12 || isTuple$13) elem$9 = iterable$11.getFromFirst(i$14++);
            final int element = ((.ceylon.language.Character)elem$9).intValue();
            .ceylon.language.print_.print(.ceylon.language.Character.instance(element));
        }
    }
    
    private final void arrayOfObjects$priv$(final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .java.lang.Object, ? extends .java.lang.Object> iterable$19 = array;
        final boolean isArray$20 = iterable$19 instanceof .ceylon.language.Array;
        final boolean isTuple$21 = iterable$19 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$19).$getArray$() != null;
        .java.lang.Object elem$17 = null;
        int i$22 = 0;
        final int length$23;
        if (isArray$20 || isTuple$21) {
            length$23 = (int)iterable$19.getSize();
        } else {
            length$23 = 0;
        }
        .ceylon.language.Iterator<? extends .java.lang.Object> element$iterator$$18 = isTuple$21 || isArray$20 ? null : iterable$19.iterator();
        loop_2: while (isTuple$21 || isArray$20 ? i$22 < length$23 : !((elem$17 = element$iterator$$18.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$20 || isTuple$21) elem$17 = iterable$19.getFromFirst(i$22++);
            final .java.lang.Object element = elem$17;
            .ceylon.language.print_.print(element);
        }
    }
    
    private final void arrayOfIntegersWithBreak$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        boolean doforelse$24 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$29 = array;
        final boolean isArray$30 = iterable$29 instanceof .ceylon.language.Array;
        final boolean isTuple$31 = iterable$29 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$29).$getArray$() != null;
        .java.lang.Object elem$26 = null;
        int i$32 = 0;
        final int length$33;
        if (isArray$30 || isTuple$31) {
            length$33 = (int)iterable$29.getSize();
        } else {
            length$33 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$27 = isTuple$31 || isArray$30 ? null : iterable$29.iterator();
        loop_3: while (isTuple$31 || isArray$30 ? i$32 < length$33 : !((elem$26 = element$iterator$$27.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$30 || isTuple$31) elem$26 = iterable$29.getFromFirst(i$32++);
            final long element = ((.ceylon.language.Integer)elem$26).longValue();
            
            final class x_ {
                
                private x_() {
                }
                
                long x() {
                    return element + 10L;
                }
            }
            final x_ x = new x_();
            if (element == 10L) {
                doforelse$24 = false;
                break loop_3;
            }
        }
        if (doforelse$24) {
            .ceylon.language.print_.print(.ceylon.language.String.instance("foo"));
        }
    }
    
    private final void keyValue$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>, ? extends .java.lang.Object> iterable$36 = array;
        final boolean isArray$37 = iterable$36 instanceof .ceylon.language.Array;
        final boolean isTuple$38 = iterable$36 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$36).$getArray$() != null;
        .java.lang.Object elem$35 = null;
        int i$39 = 0;
        final int length$40;
        if (isArray$37 || isTuple$38) {
            length$40 = (int)iterable$36.getSize();
        } else {
            length$40 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Entry<? extends .ceylon.language.Integer, ? extends .ceylon.language.Float>> elem$35$iterator$ = isTuple$38 || isArray$37 ? null : iterable$36.iterator();
        loop_4: while (isTuple$38 || isArray$37 ? i$39 < length$40 : !((elem$35 = elem$35$iterator$.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$37 || isTuple$38) elem$35 = iterable$36.getFromFirst(i$39++);
            final long i = ((.ceylon.language.Integer)((.ceylon.language.Entry)elem$35).getKey()).longValue();
            final double f = ((.ceylon.language.Float)((.ceylon.language.Entry)elem$35).getItem()).doubleValue();
            .ceylon.language.print_.print(.ceylon.language.Float.instance(i + f));
        }
    }
    
    private final void arrayOfIntegersArraySequenceDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$44 = array;
        final boolean isArray$45 = iterable$44 instanceof .ceylon.language.Array;
        final boolean isTuple$46 = iterable$44 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$44).$getArray$() != null;
        .java.lang.Object elem$42 = null;
        int i$47 = 0;
        final int length$48;
        if (isArray$45 || isTuple$46) {
            length$48 = (int)iterable$44.getSize();
        } else {
            length$48 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$43 = isTuple$46 || isArray$45 ? null : iterable$44.iterator();
        loop_5: while (isTuple$46 || isArray$45 ? i$47 < length$48 : !((elem$42 = element$iterator$$43.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$45 || isTuple$46) elem$42 = iterable$44.getFromFirst(i$47++);
            final long element = ((.ceylon.language.Integer)elem$42).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfIntegersArrayDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$52 = array;
        final boolean isTuple$53 = iterable$52 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$52).$getArray$() != null;
        .java.lang.Object elem$50 = null;
        int i$54 = 0;
        final int length$55;
        if (isTuple$53) {
            length$55 = (int)iterable$52.getSize();
        } else {
            length$55 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$51 = isTuple$53 ? null : iterable$52.iterator();
        loop_6: while (isTuple$53 ? i$54 < length$55 : !((elem$50 = element$iterator$$51.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$53) elem$50 = iterable$52.getFromFirst(i$54++);
            final long element = ((.ceylon.language.Integer)elem$50).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    private final void arrayOfIntegersDisabled$priv$(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> array) {
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$59 = array;
        final boolean isTuple$60 = iterable$59 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$59).$getArray$() != null;
        .java.lang.Object elem$57 = null;
        int i$61 = 0;
        final int length$62;
        if (isTuple$60) {
            length$62 = (int)iterable$59.getSize();
        } else {
            length$62 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$58 = isTuple$60 ? null : iterable$59.iterator();
        loop_7: while (isTuple$60 ? i$61 < length$62 : !((elem$57 = element$iterator$$58.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$60) elem$57 = iterable$59.getFromFirst(i$61++);
            final long element = ((.ceylon.language.Integer)elem$57).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
        .java.lang.Object elem$64;
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> element$iterator$$65 = array.iterator();
        loop_8: while (!((elem$64 = element$iterator$$65.next()) instanceof .ceylon.language.Finished)) {
            final long element = ((.ceylon.language.Integer)elem$64).longValue();
            .ceylon.language.print_.print(.ceylon.language.Integer.instance(element + 5L));
        }
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.statement.loop.optim.ArrayIterationDynamic.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.statement.loop.optim.ArrayIterationDynamic.class);
}