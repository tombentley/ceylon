package com.redhat.ceylon.compiler.java.test.issues.bug12xx;

final class bug1227_ifBreak_returnElse_ {
    
    private bug1227_ifBreak_returnElse_() {
    }
    
    static long bug1227_ifBreak_returnElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$0 = 0L;
        boolean doforelse$1 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$7 = l;
        final boolean isArray$8 = iterable$7 instanceof .ceylon.language.Array;
        final boolean isTuple$9 = iterable$7 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$7).$getArray$() != null;
        .java.lang.Object elem$3 = null;
        int i$10 = 0;
        final int length$11;
        if (isArray$8 || isTuple$9) {
            length$11 = (int)iterable$7.getSize();
        } else {
            length$11 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$4 = isTuple$9 || isArray$8 ? null : iterable$7.iterator();
        loop_0: while (isTuple$9 || isArray$8 ? i$10 < length$11 : !((elem$3 = index$iterator$$4.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$8 || isTuple$9) elem$3 = iterable$7.getFromFirst(i$10++);
            final long index = ((.ceylon.language.Integer)elem$3).longValue();
            if (someBoolean) {
                from$0 = index;
                final long from$6 = from$0;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$6 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$1 = false;
                break loop_0;
            }
        }
        if (doforelse$1) {
            return 0L;
        }
        from = from$0;
        return from;
    }
}
final class bug1227_ifBreak_returnElse_opt_ {
    
    private bug1227_ifBreak_returnElse_opt_() {
    }
    
    static long bug1227_ifBreak_returnElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$12 = 0L;
        boolean doforelse$13 = true;
        final long $ceylontmp$first$16 = 1L;
        final long $ceylontmp$last$17 = 10L;
        final boolean $ceylontmp$increasing$18 = .ceylon.language.Integer.offset($ceylontmp$last$17, $ceylontmp$first$16) >= 0;
        final long $ceylontmp$incr$19 = $ceylontmp$increasing$18 ? 1L : -1L;
        long index$22 = $ceylontmp$first$16;
        long $ceylontmp$element$21 = $ceylontmp$first$16;
        boolean $ceylontmp$f$20 = false;
        loop_1: do {
            if ($ceylontmp$f$20) $ceylontmp$element$21 += $ceylontmp$incr$19;
            $ceylontmp$f$20 = true;
            index$22 = $ceylontmp$element$21;
            final long index = index$22;
            $ceylontmp$continue$15: do {
                if (someBoolean) {
                    from$12 = index;
                    final long from$24 = from$12;
                    doforelse$13 = false;
                    break loop_1;
                }
            }             while (false);
        }         while ($ceylontmp$increasing$18 ? index$22 - $ceylontmp$last$17 != 0L : index$22 - $ceylontmp$last$17 != 0L);
        if (doforelse$13) {
            return 0L;
        }
        from = from$12;
        return from;
    }
}
final class bug1227_ifBreak_specifiedElse_ {
    
    private bug1227_ifBreak_specifiedElse_() {
    }
    
    static long bug1227_ifBreak_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$25 = 0L;
        boolean doforelse$26 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$32 = l;
        final boolean isArray$33 = iterable$32 instanceof .ceylon.language.Array;
        final boolean isTuple$34 = iterable$32 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$32).$getArray$() != null;
        .java.lang.Object elem$28 = null;
        int i$35 = 0;
        final int length$36;
        if (isArray$33 || isTuple$34) {
            length$36 = (int)iterable$32.getSize();
        } else {
            length$36 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$29 = isTuple$34 || isArray$33 ? null : iterable$32.iterator();
        loop_2: while (isTuple$34 || isArray$33 ? i$35 < length$36 : !((elem$28 = index$iterator$$29.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$33 || isTuple$34) elem$28 = iterable$32.getFromFirst(i$35++);
            final long index = ((.ceylon.language.Integer)elem$28).longValue();
            if (someBoolean) {
                from$25 = index;
                final long from$31 = from$25;
                final long x = from$31 + 1L;
                doforelse$26 = false;
                break loop_2;
            }
        }
        if (doforelse$26) {
            from$25 = 0L;
            final long from$37 = from$25;
        }
        from = from$25;
        return from;
    }
}
final class bug1227_ifBreak_specifiedElse_opt_ {
    
    private bug1227_ifBreak_specifiedElse_opt_() {
    }
    
    static long bug1227_ifBreak_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$38 = 0L;
        boolean doforelse$39 = true;
        final long $ceylontmp$first$42 = 1L;
        final long $ceylontmp$last$43 = 10L;
        final boolean $ceylontmp$increasing$44 = .ceylon.language.Integer.offset($ceylontmp$last$43, $ceylontmp$first$42) >= 0;
        final long $ceylontmp$incr$45 = $ceylontmp$increasing$44 ? 1L : -1L;
        long index$48 = $ceylontmp$first$42;
        long $ceylontmp$element$47 = $ceylontmp$first$42;
        boolean $ceylontmp$f$46 = false;
        loop_3: do {
            if ($ceylontmp$f$46) $ceylontmp$element$47 += $ceylontmp$incr$45;
            $ceylontmp$f$46 = true;
            index$48 = $ceylontmp$element$47;
            final long index = index$48;
            $ceylontmp$continue$41: do {
                if (someBoolean) {
                    from$38 = index;
                    final long from$50 = from$38;
                    final long x = from$50 + 1L;
                    doforelse$39 = false;
                    break loop_3;
                }
            }             while (false);
        }         while ($ceylontmp$increasing$44 ? index$48 - $ceylontmp$last$43 != 0L : index$48 - $ceylontmp$last$43 != 0L);
        if (doforelse$39) {
            from$38 = 0L;
            final long from$51 = from$38;
        }
        from = from$38;
        return from;
    }
}
final class bug1227_ifBreak_elseBreak_specifiedElse_ {
    
    private bug1227_ifBreak_elseBreak_specifiedElse_() {
    }
    
    static long bug1227_ifBreak_elseBreak_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$52 = 0L;
        boolean doforelse$53 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$60 = l;
        final boolean isArray$61 = iterable$60 instanceof .ceylon.language.Array;
        final boolean isTuple$62 = iterable$60 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$60).$getArray$() != null;
        .java.lang.Object elem$55 = null;
        int i$63 = 0;
        final int length$64;
        if (isArray$61 || isTuple$62) {
            length$64 = (int)iterable$60.getSize();
        } else {
            length$64 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$56 = isTuple$62 || isArray$61 ? null : iterable$60.iterator();
        loop_4: while (isTuple$62 || isArray$61 ? i$63 < length$64 : !((elem$55 = index$iterator$$56.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$61 || isTuple$62) elem$55 = iterable$60.getFromFirst(i$63++);
            final long index = ((.ceylon.language.Integer)elem$55).longValue();
            if (someBoolean) {
                from$52 = index;
                final long from$59 = from$52;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$59 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$53 = false;
                break loop_4;
            } else {
                from$52 = index + 1L;
                final long from$58 = from$52;
                
                class C implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
                    
                    C() {
                        final long x = from$58;
                    }
                    
                    @.java.lang.Override
                    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.issues.bug12xx.bug1227_ifBreak_elseBreak_specifiedElse_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class));
                    }
                }
                doforelse$53 = false;
                break loop_4;
            }
        }
        if (doforelse$53) {
            from$52 = 0L;
            final long from$65 = from$52;
        }
        from = from$52;
        return from;
    }
}
final class bug1227_ifBreak_elseBreak_specifiedElse_opt_ {
    
    private bug1227_ifBreak_elseBreak_specifiedElse_opt_() {
    }
    
    static long bug1227_ifBreak_elseBreak_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$66 = 0L;
        boolean doforelse$67 = true;
        final long $ceylontmp$first$70 = 1L;
        final long $ceylontmp$last$71 = 10L;
        final boolean $ceylontmp$increasing$72 = .ceylon.language.Integer.offset($ceylontmp$last$71, $ceylontmp$first$70) >= 0;
        final long $ceylontmp$incr$73 = $ceylontmp$increasing$72 ? 1L : -1L;
        long index$76 = $ceylontmp$first$70;
        long $ceylontmp$element$75 = $ceylontmp$first$70;
        boolean $ceylontmp$f$74 = false;
        loop_5: do {
            if ($ceylontmp$f$74) $ceylontmp$element$75 += $ceylontmp$incr$73;
            $ceylontmp$f$74 = true;
            index$76 = $ceylontmp$element$75;
            final long index = index$76;
            $ceylontmp$continue$69: do {
                if (someBoolean) {
                    from$66 = index;
                    final long from$79 = from$66;
                    
                    final class ohNo_ {
                        
                        private ohNo_() {
                        }
                        
                        long ohNo() {
                            return from$79 + 1L;
                        }
                    }
                    final ohNo_ ohNo = new ohNo_();
                    doforelse$67 = false;
                    break loop_5;
                } else {
                    from$66 = index + 1L;
                    final long from$78 = from$66;
                    
                    class C implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .java.io.Serializable {
                        
                        C() {
                            final long x = from$78;
                        }
                        
                        @.java.lang.Override
                        public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
                            return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.member(.com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.functionOrValue(.com.redhat.ceylon.compiler.java.test.issues.bug12xx.bug1227_ifBreak_elseBreak_specifiedElse_opt_.class), .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(C.class));
                        }
                    }
                    doforelse$67 = false;
                    break loop_5;
                }
            }             while (false);
        }         while ($ceylontmp$increasing$72 ? index$76 - $ceylontmp$last$71 != 0L : index$76 - $ceylontmp$last$71 != 0L);
        if (doforelse$67) {
            from$66 = 0L;
            final long from$80 = from$66;
        }
        from = from$66;
        return from;
    }
}
final class bug1227_ifReturn_specifiedElse_ {
    
    private bug1227_ifReturn_specifiedElse_() {
    }
    
    static long bug1227_ifReturn_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$81 = 0L;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$87 = l;
        final boolean isArray$88 = iterable$87 instanceof .ceylon.language.Array;
        final boolean isTuple$89 = iterable$87 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$87).$getArray$() != null;
        .java.lang.Object elem$83 = null;
        int i$90 = 0;
        final int length$91;
        if (isArray$88 || isTuple$89) {
            length$91 = (int)iterable$87.getSize();
        } else {
            length$91 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$84 = isTuple$89 || isArray$88 ? null : iterable$87.iterator();
        loop_6: while (isTuple$89 || isArray$88 ? i$90 < length$91 : !((elem$83 = index$iterator$$84.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$88 || isTuple$89) elem$83 = iterable$87.getFromFirst(i$90++);
            final long index = ((.ceylon.language.Integer)elem$83).longValue();
            if (someBoolean) {
                from$81 = index;
                final long from$86 = from$81;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from$86 + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                return from$86;
            }
        }
        from$81 = 0L;
        final long from$92 = from$81;
        from = from$81;
        return from;
    }
}
final class bug1227_ifReturn_specifiedElse_opt_ {
    
    private bug1227_ifReturn_specifiedElse_opt_() {
    }
    
    static long bug1227_ifReturn_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$93 = 0L;
        final long $ceylontmp$first$96 = 1L;
        final long $ceylontmp$last$97 = 10L;
        final boolean $ceylontmp$increasing$98 = .ceylon.language.Integer.offset($ceylontmp$last$97, $ceylontmp$first$96) >= 0;
        final long $ceylontmp$incr$99 = $ceylontmp$increasing$98 ? 1L : -1L;
        long index$102 = $ceylontmp$first$96;
        long $ceylontmp$element$101 = $ceylontmp$first$96;
        boolean $ceylontmp$f$100 = false;
        loop_7: do {
            if ($ceylontmp$f$100) $ceylontmp$element$101 += $ceylontmp$incr$99;
            $ceylontmp$f$100 = true;
            index$102 = $ceylontmp$element$101;
            final long index = index$102;
            $ceylontmp$continue$95: do {
                if (someBoolean) {
                    from$93 = index;
                    final long from$104 = from$93;
                    
                    final class ohNo_ {
                        
                        private ohNo_() {
                        }
                        
                        long ohNo() {
                            return from$104 + 1L;
                        }
                    }
                    final ohNo_ ohNo = new ohNo_();
                    return from$104;
                }
            }             while (false);
        }         while ($ceylontmp$increasing$98 ? index$102 - $ceylontmp$last$97 != 0L : index$102 - $ceylontmp$last$97 != 0L);
        from$93 = 0L;
        final long from$105 = from$93;
        from = from$93;
        return from;
    }
}
final class bug1227_ifThrow_specifiedElse_ {
    
    private bug1227_ifThrow_specifiedElse_() {
    }
    
    static long bug1227_ifThrow_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$106 = 0L;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$112 = l;
        final boolean isArray$113 = iterable$112 instanceof .ceylon.language.Array;
        final boolean isTuple$114 = iterable$112 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$112).$getArray$() != null;
        .java.lang.Object elem$108 = null;
        int i$115 = 0;
        final int length$116;
        if (isArray$113 || isTuple$114) {
            length$116 = (int)iterable$112.getSize();
        } else {
            length$116 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$109 = isTuple$114 || isArray$113 ? null : iterable$112.iterator();
        loop_8: while (isTuple$114 || isArray$113 ? i$115 < length$116 : !((elem$108 = index$iterator$$109.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$113 || isTuple$114) elem$108 = iterable$112.getFromFirst(i$115++);
            final long index = ((.ceylon.language.Integer)elem$108).longValue();
            if (someBoolean) {
                from$106 = index;
                final long from$111 = from$106;
                throw new .ceylon.language.Exception(null, null);
            }
        }
        from$106 = 0L;
        final long from$117 = from$106;
        from = from$106;
        return from;
    }
}
final class bug1227_ifThrow_specifiedElse_opt_ {
    
    private bug1227_ifThrow_specifiedElse_opt_() {
    }
    
    static long bug1227_ifThrow_specifiedElse_opt() {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$118 = 0L;
        final long $ceylontmp$first$121 = 1L;
        final long $ceylontmp$last$122 = 10L;
        final boolean $ceylontmp$increasing$123 = .ceylon.language.Integer.offset($ceylontmp$last$122, $ceylontmp$first$121) >= 0;
        final long $ceylontmp$incr$124 = $ceylontmp$increasing$123 ? 1L : -1L;
        long index$127 = $ceylontmp$first$121;
        long $ceylontmp$element$126 = $ceylontmp$first$121;
        boolean $ceylontmp$f$125 = false;
        loop_9: do {
            if ($ceylontmp$f$125) $ceylontmp$element$126 += $ceylontmp$incr$124;
            $ceylontmp$f$125 = true;
            index$127 = $ceylontmp$element$126;
            final long index = index$127;
            $ceylontmp$continue$120: do {
                if (someBoolean) {
                    from$118 = index;
                    final long from$129 = from$118;
                    throw new .ceylon.language.Exception(null, null);
                }
            }             while (false);
        }         while ($ceylontmp$increasing$123 ? index$127 - $ceylontmp$last$122 != 0L : index$127 - $ceylontmp$last$122 != 0L);
        from$118 = 0L;
        final long from$130 = from$118;
        from = from$118;
        return from;
    }
}
final class bug1227_for2_ifReturn_specifiedElse_ {
    
    private bug1227_for2_ifReturn_specifiedElse_() {
    }
    
    static long bug1227_for2_ifReturn_specifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        long from$131 = 0L;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$145 = l;
        final boolean isArray$146 = iterable$145 instanceof .ceylon.language.Array;
        final boolean isTuple$147 = iterable$145 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$145).$getArray$() != null;
        .java.lang.Object elem$133 = null;
        int i$148 = 0;
        final int length$149;
        if (isArray$146 || isTuple$147) {
            length$149 = (int)iterable$145.getSize();
        } else {
            length$149 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$134 = isTuple$147 || isArray$146 ? null : iterable$145.iterator();
        loop_10: while (isTuple$147 || isArray$146 ? i$148 < length$149 : !((elem$133 = index$iterator$$134.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$146 || isTuple$147) elem$133 = iterable$145.getFromFirst(i$148++);
            final long index = ((.ceylon.language.Integer)elem$133).longValue();
            final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$140 = l;
            final boolean isArray$141 = iterable$140 instanceof .ceylon.language.Array;
            final boolean isTuple$142 = iterable$140 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$140).$getArray$() != null;
            .java.lang.Object elem$136 = null;
            int i$143 = 0;
            final int length$144;
            if (isArray$141 || isTuple$142) {
                length$144 = (int)iterable$140.getSize();
            } else {
                length$144 = 0;
            }
            .ceylon.language.Iterator<? extends .ceylon.language.Integer> index2$iterator$$137 = isTuple$142 || isArray$141 ? null : iterable$140.iterator();
            loop_11: while (isTuple$142 || isArray$141 ? i$143 < length$144 : !((elem$136 = index2$iterator$$137.next()) instanceof .ceylon.language.Finished)) {
                if (isArray$141 || isTuple$142) elem$136 = iterable$140.getFromFirst(i$143++);
                final long index2 = ((.ceylon.language.Integer)elem$136).longValue();
                if (someBoolean) {
                    from$131 = index + index2;
                    final long from$139 = from$131;
                    return from$139;
                }
            }
        }
        from$131 = 0L;
        final long from$150 = from$131;
        from = from$131;
        return from;
    }
}
final class bug1227_declaredInside_ {
    
    private bug1227_declaredInside_() {
    }
    
    static long bug1227_declaredInside(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        boolean doforelse$151 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$156 = l;
        final boolean isArray$157 = iterable$156 instanceof .ceylon.language.Array;
        final boolean isTuple$158 = iterable$156 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$156).$getArray$() != null;
        .java.lang.Object elem$153 = null;
        int i$159 = 0;
        final int length$160;
        if (isArray$157 || isTuple$158) {
            length$160 = (int)iterable$156.getSize();
        } else {
            length$160 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$154 = isTuple$158 || isArray$157 ? null : iterable$156.iterator();
        loop_12: while (isTuple$158 || isArray$157 ? i$159 < length$160 : !((elem$153 = index$iterator$$154.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$157 || isTuple$158) elem$153 = iterable$156.getFromFirst(i$159++);
            final long index = ((.ceylon.language.Integer)elem$153).longValue();
            final long from;
            if (someBoolean) {
                from = index;
                
                final class ohNo_ {
                    
                    private ohNo_() {
                    }
                    
                    long ohNo() {
                        return from + 1L;
                    }
                }
                final ohNo_ ohNo = new ohNo_();
                doforelse$151 = false;
                break loop_12;
            }
        }
        if (doforelse$151) {
            return 0L;
        }
        return 0L;
    }
}
final class bug1227_onlySpecifiedElse_ {
    
    private bug1227_onlySpecifiedElse_() {
    }
    
    static long bug1227_onlySpecifiedElse(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        final long from;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$164 = l;
        final boolean isArray$165 = iterable$164 instanceof .ceylon.language.Array;
        final boolean isTuple$166 = iterable$164 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$164).$getArray$() != null;
        .java.lang.Object elem$162 = null;
        int i$167 = 0;
        final int length$168;
        if (isArray$165 || isTuple$166) {
            length$168 = (int)iterable$164.getSize();
        } else {
            length$168 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$163 = isTuple$166 || isArray$165 ? null : iterable$164.iterator();
        loop_13: while (isTuple$166 || isArray$165 ? i$167 < length$168 : !((elem$162 = index$iterator$$163.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$165 || isTuple$166) elem$162 = iterable$164.getFromFirst(i$167++);
            final long index = ((.ceylon.language.Integer)elem$162).longValue();
            throw new .ceylon.language.Exception(null, null);
        }
        from = 0L;
        return from;
    }
}
final class bug1227_function_ {
    
    private bug1227_function_() {
    }
    
    static long bug1227_function(final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> l) {
        final boolean someBoolean = ((.ceylon.language.Boolean)(.java.lang.Object).ceylon.language.nothing_.get_()).booleanValue();
        
        final class from_ {
            
            private from_() {
                this.from = null;
            }
            private .ceylon.language.Callable<? extends .ceylon.language.Integer> from;
            
            long from() {
                if (from == null) throw new .com.redhat.ceylon.compiler.java.language.UninitializedMethodError(); else return from.$call$().longValue();
            }
        }
        final from_ from = new from_();
        boolean doforelse$169 = true;
        final .ceylon.language.Iterable<? extends .ceylon.language.Integer, ? extends .java.lang.Object> iterable$174 = l;
        final boolean isArray$175 = iterable$174 instanceof .ceylon.language.Array;
        final boolean isTuple$176 = iterable$174 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$174).$getArray$() != null;
        .java.lang.Object elem$171 = null;
        int i$177 = 0;
        final int length$178;
        if (isArray$175 || isTuple$176) {
            length$178 = (int)iterable$174.getSize();
        } else {
            length$178 = 0;
        }
        .ceylon.language.Iterator<? extends .ceylon.language.Integer> index$iterator$$172 = isTuple$176 || isArray$175 ? null : iterable$174.iterator();
        loop_14: while (isTuple$176 || isArray$175 ? i$177 < length$178 : !((elem$171 = index$iterator$$172.next()) instanceof .ceylon.language.Finished)) {
            if (isArray$175 || isTuple$176) elem$171 = iterable$174.getFromFirst(i$177++);
            final long index = ((.ceylon.language.Integer)elem$171).longValue();
            if (someBoolean) {
                from.from = new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.ceylon.language.Integer>(.ceylon.language.Integer.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Integer()", (short)-1){
                    
                    @.java.lang.Override
                    public .ceylon.language.Integer $call$() {
                        return .ceylon.language.Integer.instance(index);
                    }
                };
                doforelse$169 = false;
                break loop_14;
            }
        }
        if (doforelse$169) {
            return 0L;
        }
        return from.from();
    }
}