package com.redhat.ceylon.compiler.java.test.structure.iface;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
        value = "T",
        variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
interface DefaultSatisfyCompanion<T> {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion$impl<T> $com$redhat$ceylon$compiler$java$test$structure$iface$DefaultSatisfyCompanion$impl();
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.DefaultAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "ceylon.language::Anything",
            declaredVoid = true)
    public .java.lang.Object m();
}
@.com.redhat.ceylon.compiler.java.metadata.Ignore
final class DefaultSatisfyCompanion$impl<T> implements .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    DefaultSatisfyCompanion$impl(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T, .com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion<T> $this) {
        this.$reified$T = $reified$T;
        this.$this = $this;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T;
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion<T> $this;
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public void $refine$(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$T) {
        this.$reified$T = $reified$T;
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .java.lang.Object m() {
        return null;
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.Interface(useDefaultMethods = true)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"com.redhat.ceylon.compiler.java.test.structure.iface::DefaultSatisfyCompanion<U>"})
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
        value = "U",
        variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
interface DefaultSatisfyCompanion2<U> extends .com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion<U> {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public default .com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion$impl<U> $com$redhat$ceylon$compiler$java$test$structure$iface$DefaultSatisfyCompanion$impl() {
        return new .com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion$impl<U>(.com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion2.this.$reified$com$redhat$ceylon$compiler$java$test$structure$iface$DefaultSatisfyCompanion2$U(), this);
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$structure$iface$DefaultSatisfyCompanion2$U();
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.ActualAnnotation$annotation$
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo(
            value = "ceylon.language::Anything",
            declaredVoid = true)
    public default .java.lang.Object m() {
        this.$com$redhat$ceylon$compiler$java$test$structure$iface$DefaultSatisfyCompanion$impl().m();
        return null;
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"com.redhat.ceylon.compiler.java.test.structure.iface::DefaultSatisfyCompanion2<X>"})
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
        value = "X",
        variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
class DefaultSatisfyCompanion3<X> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion2<X>, .java.io.Serializable {
    
    DefaultSatisfyCompanion3(@.com.redhat.ceylon.compiler.java.metadata.Ignore
    final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$X) {
        this.$reified$X = $reified$X;
        this.$com$redhat$ceylon$compiler$java$test$structure$iface$DefaultSatisfyCompanion$this$ = new .com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion$impl<X>($reified$X, this);
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$X;
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$structure$iface$DefaultSatisfyCompanion2$U() {
        return $reified$X;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected final .com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion$impl<X> $com$redhat$ceylon$compiler$java$test$structure$iface$DefaultSatisfyCompanion$this$;
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion$impl<X> $com$redhat$ceylon$compiler$java$test$structure$iface$DefaultSatisfyCompanion$impl() {
        return $com$redhat$ceylon$compiler$java$test$structure$iface$DefaultSatisfyCompanion$this$;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.iface.DefaultSatisfyCompanion3.class, $reified$X);
    }
}