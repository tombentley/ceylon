package com.redhat.ceylon.compiler.java.test.issues.bug12xx;

interface Bug1289_Bar<Key> extends .com.redhat.ceylon.compiler.java.language.ObjectProxy {
    
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug12xx$Bug1289_Bar$Key();
    
    public abstract .java.lang.Object m(final Key x, final Key y, final Key z);
}
class Bug1289_Foo implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.issues.bug12xx.Bug1289_Bar<.ceylon.language.Integer>, .java.io.Serializable {
    
    Bug1289_Foo() {
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug12xx$Bug1289_Bar$Key() {
        return .ceylon.language.Integer.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public final .java.lang.Object m(final .ceylon.language.Integer xboxed, final .ceylon.language.Integer yboxed, final .ceylon.language.Integer zboxed) {
        final long x = ((.ceylon.language.Integer)(.java.lang.Object).ceylon.language.nothing_.get_()).longValue();
        final long y = ((.ceylon.language.Integer)(.java.lang.Object).ceylon.language.nothing_.get_()).longValue();
        final long z = ((.ceylon.language.Integer)(.java.lang.Object).ceylon.language.nothing_.get_()).longValue();
        boolean b = false;
        b = (
            let
            {
                long middle$0 = y;
            }
            returning x < middle$0 && middle$0 < z;
        );
        b = (
            let
            {
                long middle$1 = z;
            }
            returning x < middle$1 && middle$1 < y;
        );
        b = (
            let
            {
                long middle$2 = x;
            }
            returning y < middle$2 && middle$2 < z;
        );
        b = (
            let
            {
                long middle$3 = z;
            }
            returning y < middle$3 && middle$3 < x;
        );
        b = (
            let
            {
                long middle$4 = x;
            }
            returning z < middle$4 && middle$4 < y;
        );
        b = (
            let
            {
                long middle$5 = y;
            }
            returning z < middle$5 && middle$5 < x;
        );
        b = (
            let
            {
                long middle$6 = y;
            }
            returning xboxed.longValue() < middle$6 && middle$6 < z;
        );
        b = (
            let
            {
                long middle$7 = z;
            }
            returning xboxed.longValue() < middle$7 && middle$7 < y;
        );
        b = (
            let
            {
                long middle$8 = xboxed.longValue();
            }
            returning y < middle$8 && middle$8 < z;
        );
        b = (
            let
            {
                long middle$9 = z;
            }
            returning y < middle$9 && middle$9 < xboxed.longValue();
        );
        b = (
            let
            {
                long middle$10 = xboxed.longValue();
            }
            returning z < middle$10 && middle$10 < y;
        );
        b = (
            let
            {
                long middle$11 = y;
            }
            returning z < middle$11 && middle$11 < xboxed.longValue();
        );
        b = (
            let
            {
                long middle$12 = yboxed.longValue();
            }
            returning xboxed.longValue() < middle$12 && middle$12 < z;
        );
        b = (
            let
            {
                long middle$13 = z;
            }
            returning xboxed.longValue() < middle$13 && middle$13 < yboxed.longValue();
        );
        b = (
            let
            {
                long middle$14 = xboxed.longValue();
            }
            returning yboxed.longValue() < middle$14 && middle$14 < z;
        );
        b = (
            let
            {
                long middle$15 = z;
            }
            returning yboxed.longValue() < middle$15 && middle$15 < xboxed.longValue();
        );
        b = (
            let
            {
                long middle$16 = xboxed.longValue();
            }
            returning z < middle$16 && middle$16 < yboxed.longValue();
        );
        b = (
            let
            {
                long middle$17 = yboxed.longValue();
            }
            returning z < middle$17 && middle$17 < xboxed.longValue();
        );
        b = (
            let
            {
                .ceylon.language.Integer middle$18 = yboxed;
            }
            returning xboxed.smallerThan(middle$18) && middle$18.smallerThan(zboxed);
        );
        b = (
            let
            {
                .ceylon.language.Integer middle$19 = zboxed;
            }
            returning xboxed.smallerThan(middle$19) && middle$19.smallerThan(yboxed);
        );
        b = (
            let
            {
                .ceylon.language.Integer middle$20 = xboxed;
            }
            returning yboxed.smallerThan(middle$20) && middle$20.smallerThan(zboxed);
        );
        b = (
            let
            {
                .ceylon.language.Integer middle$21 = zboxed;
            }
            returning yboxed.smallerThan(middle$21) && middle$21.smallerThan(xboxed);
        );
        b = (
            let
            {
                .ceylon.language.Integer middle$22 = xboxed;
            }
            returning zboxed.smallerThan(middle$22) && middle$22.smallerThan(yboxed);
        );
        b = (
            let
            {
                .ceylon.language.Integer middle$23 = yboxed;
            }
            returning zboxed.smallerThan(middle$23) && middle$23.smallerThan(xboxed);
        );
        return null;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug12xx.Bug1289_Foo.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug12xx.Bug1289_Foo.class);
}
class Bug1289_Foo2 implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.issues.bug12xx.Bug1289_Bar<.ceylon.language.Float>, .java.io.Serializable {
    
    Bug1289_Foo2() {
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug12xx$Bug1289_Bar$Key() {
        return .ceylon.language.Float.$TypeDescriptor$;
    }
    
    @.java.lang.Override
    public final .java.lang.Object m(final .ceylon.language.Float xboxed, final .ceylon.language.Float yboxed, final .ceylon.language.Float zboxed) {
        final double x = ((.ceylon.language.Float)(.java.lang.Object).ceylon.language.nothing_.get_()).doubleValue();
        final double y = ((.ceylon.language.Float)(.java.lang.Object).ceylon.language.nothing_.get_()).doubleValue();
        final double z = ((.ceylon.language.Float)(.java.lang.Object).ceylon.language.nothing_.get_()).doubleValue();
        boolean b = false;
        b = (
            let
            {
                double middle$24 = y;
            }
            returning x < middle$24 && middle$24 < z;
        );
        b = (
            let
            {
                double middle$25 = z;
            }
            returning x < middle$25 && middle$25 < y;
        );
        b = (
            let
            {
                double middle$26 = x;
            }
            returning y < middle$26 && middle$26 < z;
        );
        b = (
            let
            {
                double middle$27 = z;
            }
            returning y < middle$27 && middle$27 < x;
        );
        b = (
            let
            {
                double middle$28 = x;
            }
            returning z < middle$28 && middle$28 < y;
        );
        b = (
            let
            {
                double middle$29 = y;
            }
            returning z < middle$29 && middle$29 < x;
        );
        b = (
            let
            {
                double middle$30 = y;
            }
            returning xboxed.doubleValue() < middle$30 && middle$30 < z;
        );
        b = (
            let
            {
                double middle$31 = z;
            }
            returning xboxed.doubleValue() < middle$31 && middle$31 < y;
        );
        b = (
            let
            {
                double middle$32 = xboxed.doubleValue();
            }
            returning y < middle$32 && middle$32 < z;
        );
        b = (
            let
            {
                double middle$33 = z;
            }
            returning y < middle$33 && middle$33 < xboxed.doubleValue();
        );
        b = (
            let
            {
                double middle$34 = xboxed.doubleValue();
            }
            returning z < middle$34 && middle$34 < y;
        );
        b = (
            let
            {
                double middle$35 = y;
            }
            returning z < middle$35 && middle$35 < xboxed.doubleValue();
        );
        b = (
            let
            {
                double middle$36 = yboxed.doubleValue();
            }
            returning xboxed.doubleValue() < middle$36 && middle$36 < z;
        );
        b = (
            let
            {
                double middle$37 = z;
            }
            returning xboxed.doubleValue() < middle$37 && middle$37 < yboxed.doubleValue();
        );
        b = (
            let
            {
                double middle$38 = xboxed.doubleValue();
            }
            returning yboxed.doubleValue() < middle$38 && middle$38 < z;
        );
        b = (
            let
            {
                double middle$39 = z;
            }
            returning yboxed.doubleValue() < middle$39 && middle$39 < xboxed.doubleValue();
        );
        b = (
            let
            {
                double middle$40 = xboxed.doubleValue();
            }
            returning z < middle$40 && middle$40 < yboxed.doubleValue();
        );
        b = (
            let
            {
                double middle$41 = yboxed.doubleValue();
            }
            returning z < middle$41 && middle$41 < xboxed.doubleValue();
        );
        b = (
            let
            {
                .ceylon.language.Float middle$42 = yboxed;
            }
            returning xboxed.smallerThan(middle$42) && middle$42.smallerThan(zboxed);
        );
        b = (
            let
            {
                .ceylon.language.Float middle$43 = zboxed;
            }
            returning xboxed.smallerThan(middle$43) && middle$43.smallerThan(yboxed);
        );
        b = (
            let
            {
                .ceylon.language.Float middle$44 = xboxed;
            }
            returning yboxed.smallerThan(middle$44) && middle$44.smallerThan(zboxed);
        );
        b = (
            let
            {
                .ceylon.language.Float middle$45 = zboxed;
            }
            returning yboxed.smallerThan(middle$45) && middle$45.smallerThan(xboxed);
        );
        b = (
            let
            {
                .ceylon.language.Float middle$46 = xboxed;
            }
            returning zboxed.smallerThan(middle$46) && middle$46.smallerThan(yboxed);
        );
        b = (
            let
            {
                .ceylon.language.Float middle$47 = yboxed;
            }
            returning zboxed.smallerThan(middle$47) && middle$47.smallerThan(xboxed);
        );
        return null;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug12xx.Bug1289_Foo2.$TypeDescriptor$;
    }
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug12xx.Bug1289_Foo2.class);
}
class Bug1289_Foo3<Element extends .ceylon.language.Comparable<? super Element>> implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.issues.bug12xx.Bug1289_Bar<Element>, .java.io.Serializable {
    
    Bug1289_Foo3(final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element) {
        this.$reified$Element = $reified$Element;
    }
    private final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$Element;
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug12xx$Bug1289_Bar$Key() {
        return $reified$Element;
    }
    
    @.java.lang.Override
    public final .java.lang.Object m(final Element xboxed, final Element yboxed, final Element zboxed) {
        final Element x = (Element)(.java.lang.Object).ceylon.language.nothing_.get_();
        final Element y = (Element)(.java.lang.Object).ceylon.language.nothing_.get_();
        final Element z = (Element)(.java.lang.Object).ceylon.language.nothing_.get_();
        boolean b = false;
        b = (
            let
            {
                Element middle$48 = (Element)y;
            }
            returning x.smallerThan(middle$48) && middle$48.smallerThan(z);
        );
        b = (
            let
            {
                Element middle$49 = (Element)z;
            }
            returning x.smallerThan(middle$49) && middle$49.smallerThan(y);
        );
        b = (
            let
            {
                Element middle$50 = (Element)x;
            }
            returning y.smallerThan(middle$50) && middle$50.smallerThan(z);
        );
        b = (
            let
            {
                Element middle$51 = (Element)z;
            }
            returning y.smallerThan(middle$51) && middle$51.smallerThan(x);
        );
        b = (
            let
            {
                Element middle$52 = (Element)x;
            }
            returning z.smallerThan(middle$52) && middle$52.smallerThan(y);
        );
        b = (
            let
            {
                Element middle$53 = (Element)y;
            }
            returning z.smallerThan(middle$53) && middle$53.smallerThan(x);
        );
        b = (
            let
            {
                Element middle$54 = (Element)y;
            }
            returning xboxed.smallerThan(middle$54) && middle$54.smallerThan(z);
        );
        b = (
            let
            {
                Element middle$55 = (Element)z;
            }
            returning xboxed.smallerThan(middle$55) && middle$55.smallerThan(y);
        );
        b = (
            let
            {
                Element middle$56 = (Element)xboxed;
            }
            returning y.smallerThan(middle$56) && middle$56.smallerThan(z);
        );
        b = (
            let
            {
                Element middle$57 = (Element)z;
            }
            returning y.smallerThan(middle$57) && middle$57.smallerThan(xboxed);
        );
        b = (
            let
            {
                Element middle$58 = (Element)xboxed;
            }
            returning z.smallerThan(middle$58) && middle$58.smallerThan(y);
        );
        b = (
            let
            {
                Element middle$59 = (Element)y;
            }
            returning z.smallerThan(middle$59) && middle$59.smallerThan(xboxed);
        );
        b = (
            let
            {
                Element middle$60 = (Element)yboxed;
            }
            returning xboxed.smallerThan(middle$60) && middle$60.smallerThan(z);
        );
        b = (
            let
            {
                Element middle$61 = (Element)z;
            }
            returning xboxed.smallerThan(middle$61) && middle$61.smallerThan(yboxed);
        );
        b = (
            let
            {
                Element middle$62 = (Element)xboxed;
            }
            returning yboxed.smallerThan(middle$62) && middle$62.smallerThan(z);
        );
        b = (
            let
            {
                Element middle$63 = (Element)z;
            }
            returning yboxed.smallerThan(middle$63) && middle$63.smallerThan(xboxed);
        );
        b = (
            let
            {
                Element middle$64 = (Element)xboxed;
            }
            returning z.smallerThan(middle$64) && middle$64.smallerThan(yboxed);
        );
        b = (
            let
            {
                Element middle$65 = (Element)yboxed;
            }
            returning z.smallerThan(middle$65) && middle$65.smallerThan(xboxed);
        );
        b = (
            let
            {
                Element middle$66 = (Element)yboxed;
            }
            returning xboxed.smallerThan(middle$66) && middle$66.smallerThan(zboxed);
        );
        b = (
            let
            {
                Element middle$67 = (Element)zboxed;
            }
            returning xboxed.smallerThan(middle$67) && middle$67.smallerThan(yboxed);
        );
        b = (
            let
            {
                Element middle$68 = (Element)xboxed;
            }
            returning yboxed.smallerThan(middle$68) && middle$68.smallerThan(zboxed);
        );
        b = (
            let
            {
                Element middle$69 = (Element)zboxed;
            }
            returning yboxed.smallerThan(middle$69) && middle$69.smallerThan(xboxed);
        );
        b = (
            let
            {
                Element middle$70 = (Element)xboxed;
            }
            returning zboxed.smallerThan(middle$70) && middle$70.smallerThan(yboxed);
        );
        b = (
            let
            {
                Element middle$71 = (Element)yboxed;
            }
            returning zboxed.smallerThan(middle$71) && middle$71.smallerThan(xboxed);
        );
        return null;
    }
    
    @.java.lang.Override
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug12xx.Bug1289_Foo3.class, $reified$Element);
    }
}