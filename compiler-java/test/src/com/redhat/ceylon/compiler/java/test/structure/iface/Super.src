package com.redhat.ceylon.compiler.java.test.structure.iface;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
interface I {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.test.structure.iface.I$impl $com$redhat$ceylon$compiler$java$test$structure$iface$I$impl();
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::String")
    @.com.redhat.ceylon.compiler.java.metadata.Transient
    public .java.lang.String getS();
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.iface.I.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ignore
final class I$impl implements .java.io.Serializable {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    I$impl(.com.redhat.ceylon.compiler.java.test.structure.iface.I $this) {
        this.$this = $this;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    private final .com.redhat.ceylon.compiler.java.test.structure.iface.I $this;
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public final .java.lang.String getS() {
        return "";
    }
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.Interface(useDefaultMethods = true)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"com.redhat.ceylon.compiler.java.test.structure.iface::I"})
interface I2 extends .com.redhat.ceylon.compiler.java.test.structure.iface.I {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public default .com.redhat.ceylon.compiler.java.test.structure.iface.I$impl $com$redhat$ceylon$compiler$java$test$structure$iface$I$impl() {
        return new .com.redhat.ceylon.compiler.java.test.structure.iface.I$impl(this);
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.iface.I2.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(major = 8)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"com.redhat.ceylon.compiler.java.test.structure.iface::I2"})
class C implements .com.redhat.ceylon.compiler.java.runtime.model.ReifiedType, .com.redhat.ceylon.compiler.java.test.structure.iface.I2, .java.io.Serializable {
    
    C() {
        this.$com$redhat$ceylon$compiler$java$test$structure$iface$I$this$ = new .com.redhat.ceylon.compiler.java.test.structure.iface.I$impl(this);
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    protected final .com.redhat.ceylon.compiler.java.test.structure.iface.I$impl $com$redhat$ceylon$compiler$java$test$structure$iface$I$this$;
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.test.structure.iface.I$impl $com$redhat$ceylon$compiler$java$test$structure$iface$I$impl() {
        return $com$redhat$ceylon$compiler$java$test$structure$iface$I$this$;
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public final .java.lang.String getS() {
        return $com$redhat$ceylon$compiler$java$test$structure$iface$I$this$.getS();
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("ceylon.language::Anything")
    private final void m$priv$() {
        final .java.lang.String s = $com$redhat$ceylon$compiler$java$test$structure$iface$I$this$.getS();
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $getType$() {
        return .com.redhat.ceylon.compiler.java.test.structure.iface.C.$TypeDescriptor$;
    }
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.structure.iface.C.class);
}