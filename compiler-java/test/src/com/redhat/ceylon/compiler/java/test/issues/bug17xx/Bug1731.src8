package com.redhat.ceylon.compiler.java.test.issues.bug17xx;

public final class bug1731_ {
    
    private bug1731_() {
    }
    
    public static void bug1731(final .ceylon.language.Sequential values) {
        final .ceylon.language.Iterable iterable$6 = values;
        final boolean isTuple$7 = iterable$6 instanceof .ceylon.language.Tuple && ((.ceylon.language.Tuple)iterable$6).$getArray$() != null;
        .java.lang.Object elem$1 = null;
        int i$8 = 0;
        final int length$9;
        if (isTuple$7) {
            length$9 = (int)iterable$6.getSize();
        } else {
            length$9 = 0;
        }
        .ceylon.language.Iterator<? extends .java.lang.Object> val$iterator$$2 = isTuple$7 ? null : iterable$6.iterator();
        loop_0: while (isTuple$7 ? i$8 < length$9 : !((elem$1 = val$iterator$$2.next()) instanceof .ceylon.language.Finished)) {
            if (isTuple$7) elem$1 = iterable$6.getFromFirst(i$8++);
            final .java.lang.Object val = elem$1;
            {
                .java.lang.Object sel$3 = val;
                if (sel$3 instanceof .ceylon.language.Integer) {
                    final long val$5 = ((.ceylon.language.Integer)sel$3).longValue();
                    .ceylon.language.print_.print(.ceylon.language.Integer.instance(val$5 + val$5));
                } else if (sel$3 instanceof .ceylon.language.String) {
                    final .java.lang.String val$4 = ((.ceylon.language.String)sel$3).toString();
                    .ceylon.language.print_.print(.ceylon.language.String.instance(val$4));
                } else throw new .com.redhat.ceylon.compiler.java.language.EnumeratedTypeError("Supposedly exhaustive switch was not exhaustive");
            }
        }
    }
}