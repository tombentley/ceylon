package com.redhat.ceylon.compiler.java.test.issues.bug16xx;

final class bug1665_ {
    
    private bug1665_() {
    }
    
    static void bug1665(final .ceylon.language.Sequence<? extends .ceylon.language.String> arguments, final .ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object> arguments2) {
        final .ceylon.language.Sequence<? extends .ceylon.language.String> v = (.ceylon.language.Sequence<? extends .ceylon.language.String>).ceylon.language.Tuple.instance(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.String.instance("elem")}, (.ceylon.language.Sequential<? extends .ceylon.language.String>)(.ceylon.language.Sequential)(
            let
            {
                .java.lang.Object $ceylontmp$0 = arguments;
            }
            returning $ceylontmp$0 != null ? $ceylontmp$0 : .ceylon.language.empty_.get_();
        ));
        final .ceylon.language.Sequence<? extends .ceylon.language.String> v2 = (.ceylon.language.Sequence<? extends .ceylon.language.String>).ceylon.language.Tuple.instance(.ceylon.language.String.$TypeDescriptor$, new .java.lang.Object[]{.ceylon.language.String.instance("elem")}, .com.redhat.ceylon.compiler.java.Util.sequentialOf(.ceylon.language.String.$TypeDescriptor$, (.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>)(.ceylon.language.Iterable)(
            let
            {
                .java.lang.Object $ceylontmp$1 = arguments2;
            }
            returning $ceylontmp$1 != null ? $ceylontmp$1 : .ceylon.language.empty_.get_();
        )));
        final .java.lang.Object v3 = (.ceylon.language.Sequential<? extends .ceylon.language.String>)(.ceylon.language.Sequential)(
            let
            {
                .java.lang.Object $ceylontmp$2 = arguments;
            }
            returning $ceylontmp$2 != null ? $ceylontmp$2 : .ceylon.language.empty_.get_();
        );
        final .ceylon.language.Sequential<? extends .ceylon.language.String> v4 = .com.redhat.ceylon.compiler.java.Util.sequentialOf(.ceylon.language.String.$TypeDescriptor$, (.ceylon.language.Iterable<? extends .ceylon.language.String, ? extends .java.lang.Object>)(.ceylon.language.Iterable)(
            let
            {
                .java.lang.Object $ceylontmp$3 = arguments2;
            }
            returning $ceylontmp$3 != null ? $ceylontmp$3 : .ceylon.language.empty_.get_();
        ));
    }
}