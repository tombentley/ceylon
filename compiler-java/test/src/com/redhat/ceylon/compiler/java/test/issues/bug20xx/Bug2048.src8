package com.redhat.ceylon.compiler.java.test.issues.bug20xx;

@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.Interface(useDefaultMethods = true)
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
        value = "Element",
        variance = .com.redhat.ceylon.compiler.java.metadata.Variance.OUT,
        satisfies = {},
        caseTypes = {})})
interface Bug2048List<Element> extends .com.redhat.ceylon.compiler.java.language.ObjectProxy {
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug20xx$Bug2048List$Element();
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.Interface(useDefaultMethods = true)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"com.redhat.ceylon.compiler.java.test.issues.bug20xx::Bug2048List<ceylon.language::Anything>"})
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
        value = "Element",
        variance = .com.redhat.ceylon.compiler.java.metadata.Variance.IN,
        satisfies = {},
        caseTypes = {})})
interface Bug2048Mutator<Element> extends .com.redhat.ceylon.compiler.java.test.issues.bug20xx.Bug2048List<.java.lang.Object> {
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug20xx$Bug2048List$Element() {
        return .ceylon.language.Anything.$TypeDescriptor$;
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug20xx$Bug2048Mutator$Element();
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.Interface(useDefaultMethods = true)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({
        "com.redhat.ceylon.compiler.java.test.issues.bug20xx::Bug2048Mutator<Element>",
        "com.redhat.ceylon.compiler.java.test.issues.bug20xx::Bug2048List<Element>"})
@.com.redhat.ceylon.compiler.java.metadata.TypeParameters({@.com.redhat.ceylon.compiler.java.metadata.TypeParameter(
        value = "Element",
        variance = .com.redhat.ceylon.compiler.java.metadata.Variance.NONE,
        satisfies = {},
        caseTypes = {})})
interface Bug2048Mutable<Element> extends .com.redhat.ceylon.compiler.java.test.issues.bug20xx.Bug2048Mutator<Element>, .com.redhat.ceylon.compiler.java.test.issues.bug20xx.Bug2048List<Element> {
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug20xx$Bug2048List$Element() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug20xx.Bug2048Mutable.this.$reified$com$redhat$ceylon$compiler$java$test$issues$bug20xx$Bug2048Mutable$Element();
    }
    
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public default .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug20xx$Bug2048Mutator$Element() {
        return .com.redhat.ceylon.compiler.java.test.issues.bug20xx.Bug2048Mutable.this.$reified$com$redhat$ceylon$compiler$java$test$issues$bug20xx$Bug2048Mutable$Element();
    }
    
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public abstract .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $reified$com$redhat$ceylon$compiler$java$test$issues$bug20xx$Bug2048Mutable$Element();
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.Interface(useDefaultMethods = true)
interface Bug2048UseTop extends .com.redhat.ceylon.compiler.java.language.ObjectProxy {
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.FormalAnnotation$annotation$
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.issues.bug20xx::Bug2048List<ceylon.language::String>")
    public abstract .com.redhat.ceylon.compiler.java.test.issues.bug20xx.Bug2048List<? extends .ceylon.language.String> m();
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug20xx.Bug2048UseTop.class);
}
@.com.redhat.ceylon.compiler.java.metadata.Ceylon(
        major = 8,
        minor = 1)
@.com.redhat.ceylon.compiler.java.metadata.Interface(useDefaultMethods = true)
@.com.redhat.ceylon.compiler.java.metadata.SatisfiedTypes({"com.redhat.ceylon.compiler.java.test.issues.bug20xx::Bug2048UseTop"})
interface Bug2048UseSub2 extends .com.redhat.ceylon.compiler.java.test.issues.bug20xx.Bug2048UseTop {
    
    @.ceylon.language.SharedAnnotation$annotation$
    @.ceylon.language.ActualAnnotation$annotation$
    @.ceylon.language.FormalAnnotation$annotation$
    @.java.lang.Override
    @.com.redhat.ceylon.compiler.java.metadata.TypeInfo("com.redhat.ceylon.compiler.java.test.issues.bug20xx::Bug2048Mutable<ceylon.language::String>")
    public abstract .com.redhat.ceylon.compiler.java.test.issues.bug20xx.Bug2048Mutable<.ceylon.language.String> m();
    @.com.redhat.ceylon.compiler.java.metadata.Ignore
    public static final .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor $TypeDescriptor$ = .com.redhat.ceylon.compiler.java.runtime.model.TypeDescriptor.klass(.com.redhat.ceylon.compiler.java.test.issues.bug20xx.Bug2048UseSub2.class);
}