package com.redhat.ceylon.compiler.java.test.structure.method;

final class twoParamListsAnything_ {
    
    private twoParamListsAnything_() {
    }
    
    static void twoParamListsAnything() {
        
        final class f_ {
            
            private f_() {
            }
            
            .ceylon.language.Callable<? extends .java.lang.Object> f(final .java.lang.String s) {
                return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
                    
                    @.java.lang.Override
                    public .java.lang.Object $call$() {
                        .ceylon.language.print_.print(.ceylon.language.String.instance(s));
                        return null;
                    }
                };
            }
        }
        final f_ f = new f_();
        
        final class g_ {
            
            private g_() {
            }
            
            .ceylon.language.Callable<? extends .java.lang.Object> g(final .java.lang.String s) {
                return new .com.redhat.ceylon.compiler.java.language.AbstractCallable<.java.lang.Object>(.ceylon.language.Anything.$TypeDescriptor$, .ceylon.language.Empty.$TypeDescriptor$, "Anything()", (short)-1){
                    
                    @.java.lang.Override
                    public .java.lang.Object $call$() {
                        return (
                            let
                            {
                                .ceylon.language.print_.print(.ceylon.language.String.instance(s));
                            }
                            returning null;
                        );
                    }
                };
            }
        }
        final g_ g = new g_();
        f.f("hello").$call$();
        g.g("hello").$call$();
    }
}